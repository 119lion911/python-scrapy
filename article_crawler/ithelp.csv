url,title,author,publish_time,tags,content,view_count
https://ithelp.ithome.com.tw/articles/10255282,Buy Store Location Data: Best Store Database Provider 2021,,2021-01-27 14:54:01,,"                                                            .Store location data is information about the geographical locations of retail businesses. This data is very similar to point of interest data and can be useful in learning where a brand’s best performing area is and where they are looking to target their audience..Location data are information about the geographic positions of devices (such as smartphones or tablets) or structures (such as buildings, attractions)..The geographic positions of location data are called coordinates, and they are commonly expressed in Latitude and Longitude format..Additional attributes such as elevation or altitude may be included and helps data users get more accurate picture of the geographic positions of their data..People commonly mean GPS data when they talk about location data. In reality, there are various types of location data..It is important to know how the data is collected as it determines the accuracy and depth of the collected data, this have direct implications on the suitability and usability of the data for a business..How do I get Store location data?.Most businesses usually purchase location data or location data feeds from data providers. As they do not have the time, resource, and expertise to collect location data..However, businesses should be aware that the quality of data from each data provider will vary. Data providers that specialise in providing location data tend to have higher quality data, while the more general data vendors might not have the expertise to provide good quality data..Due to the nature of data, it is near impossible to verify if a provider is selling authentic data. Businesses should assess the credibility of the data provider to avoid purchasing poor quality or even fake data..Quality location data is important as it correlates with the accuracy and reliability of the findings and insights. Bad data can result in false findings, which causes businesses to waste lots of time, effort, and money..Here is the complete list of the services and data stores that we outsource:.Services:..https://webscraping.us/web-scraping-services/..https://webscraping.us/web-data-extraction/..https://webscraping.us/web-crawling/..https://webscraping.us/data-wrangling/..https://webscraping.us/data-mining-service/..https://webscraping.us/mobile-app-scraping/%20..https://webscraping.us/web-scraping-api/..https://webscraping.us/python-web-scraping/..https://webscraping.us/enterprise-web-crawling/..https://webscraping.us/hosted-web-crawling-services/..https://webscraping.us/dark-and-deep-web-data-scraping/..https://webscraping.us/custom-data-extraction/..https://webscraping.us/web-data-harvesting/..https://webscraping.us/data-wrangling-service/..https://webscraping.us/hosted-web-crawling-services/..https://webscraping.us/dark-web-data-scraping/..Data store..https://webscraping.us/data-store/10000-decision-maker-list/..https://webscraping.us/data-store/5000-decision-maker-list/..https://webscraping.us/data-store/76-gas-station-locations/..https://webscraping.us/data-store/ascension-health-hospital-center-locations/..https://webscraping.us/data-store/autozone-store-locations/..https://webscraping.us/data-store/bi-lo-grocery-store-locations/..https://webscraping.us/data-store/burger-king-store-locations/..https://webscraping.us/data-store/caseys-store-locations/..https://webscraping.us/data-store/chick-fil-a-store-locations-in-the-usa/..https://webscraping.us/data-store/at-and-t-stores-locations-in-the-usa/..https://webscraping.us/data-store/exxon-mobil-gas-station-locations/..https://webscraping.us/data-store/harris-teeter-store-locations/..https://webscraping.us/data-store/little-caesars-store-locations/..https://webscraping.us/data-store/marianos-locations/..https://webscraping.us/data-store/raising-canes-locations/..https://webscraping.us/data-store/tim-hortons-store-locations/..https://webscraping.us/data-store/dds-store-locations/..https://webscraping.us/data-store/dollar-general-store-locations/..https://webscraping.us/data-store/dominos-pizza-locations/..https://webscraping.us/data-store/food-lion-store-locations/..https://webscraping.us/data-store/fresco-y-mas-store-locations/..https://webscraping.us/data-store/ikea-store-locations-in-the-usa/..https://webscraping.us/data-store/jamba-juice-store-locations/..https://webscraping.us/data-store/jewel-osco-store-locations-in-the-usa/..https://webscraping.us/data-store/kmart-store-locations/..https://webscraping.us/data-store/kohls-store-locations/..https://webscraping.us/data-store/kroger-store-locations/..https://webscraping.us/data-store/kwik-shop-store-locations/..https://webscraping.us/data-store/la-fitness-locations/..https://webscraping.us/data-store/lowes-store-locations/..https://webscraping.us/data-store/marcos-pizza-location/..https://webscraping.us/data-store/mcdonalds-store-locations/..https://webscraping.us/data-store/panera-bread-store-locations/..https://webscraping.us/data-store/papa-murphys-store-locations/..https://webscraping.us/data-store/racetrac-gas-station-locations/..https://webscraping.us/data-store/ralphs-store-locations-in-the-usa/..https://webscraping.us/data-store/save-a-lot-store-locations/..https://webscraping.us/data-store/shoppers-drug-mart-store-locations/..https://webscraping.us/data-store/shoprite-store-locations/..https://webscraping.us/data-store/speedway-gas-station-locations-in-the-usa/..https://webscraping.us/data-store/stop-and-shop-store-locations/..https://webscraping.us/data-store/trader-joes-store-locations/..https://webscraping.us/data-store/whole-foods-market-store-locations/..https://webscraping.us/data-store/winco-foods-store-locations-in-the-usa/. .                                                    ",52
https://ithelp.ithome.com.tw/articles/10255287,Windows的此版本即將過期,,2021-01-27 22:24:53,,                                                            .使用運行Windows 10的計算機時，您可能會得到「此Windows版本即將過期。Windows版本將在xx / xx / xx日期到期。您應盡快移至新版本。在線獲取更多信息 」的消息。那麼，當前的系統是不是就不能使用了？您該怎麼辦？...為什麼我的Windows 10版本過期了？..根據Microsoft的說法，所有Windows 10 Insider構建都有內置的到期日期。如果您運行的是Windows 10的Insider構建，則它將在幾個月後過期。為避免這種情況，用戶需要手動將Insider內部版本升級到最新的可用版本，或者讓Windows 10自動下載並安裝最新版本。..請注意，Windows 10公共發布的版本將永不過期。但是，它們還有服務終止日期。也就是說，在服務終止日期之後，Microsoft將不對該版本提供任何支持。您需要更新到最新版本以獲得支持。例如，Windows 10 2004版（2020年5月更新）的服務終止日期為2021年12月14日。..如何查看我的Windows 10內部版本號和有效期？..有多種方法可以檢查Windows 10內部版本號。最簡單的方法是在「開始/任務欄」搜索字段中鍵入winver.exe，然後按Enter鍵。關於Windows對話框顯示各種信息，包括Windows 10內部版本號。如果使用的是Insider構建，則「關於Windows」對話框還將顯示構建的到期日期。...這是否意味著我的Windows 10激活到期？..不。「Windows的此內部版本即將過期」消息警告用戶，Windows 10的特定內部版本將過期，而不是激活。..我需要手動下載並安裝新版本嗎？..不，您不一定需要這樣做。如果將自動更新設置為默認，則Windows 10將自動下載並安裝最新版本。也就是說，如果您希望刪除當前版本並通過從Microsoft下載Windows 10 ISO來手動安裝最新版本的Windows 10，就可以這樣做。..最簡單的方法是讓Windows 10自動下載並安裝最新版本。..如何檢查最新更新？..在Windows 10 PC上，導航至「設置」 >「 更新和安全性」 >「 Windows Update」頁面，然後單擊「 檢查更新」按鈕以檢查是否有較新版本的Windows 10。如果可用，Windows 10將自動下載並安裝它。..如果我繼續使用Windows 10的過期版本會怎樣？..根據Microsoft的說明，一旦構建過期，用戶將每天收到一次警告。兩週後，Windows 10將不再啟動。您將必須從Microsoft（在運行的計算機上）下載新的Windows 10 Insider ISO映像並進行安裝。..因此，如果您使用Windows 10，最好在當前安裝的版本過期之前升級到最新的Insider版本。. .                                                    ,27
https://ithelp.ithome.com.tw/articles/10255216,修復：Windows中「資料夾太大無法放入資源回收筒」,,2021-01-22 16:58:10,,                                                            .有時，當您嘗試通過右鍵單擊某個檔案，您單擊「刪除」選項或按鍵盤上的Delete鍵來刪除檔案時，Windows 10會將檔案移到資源回收筒。但是，有時，當您嘗試刪除大檔案或資料夾時，可能會收到「此資料夾太大，因此無法放入資源回收筒。是否要永久刪除此資料夾？」消息，帶有「是」或「否」按鈕。...出現此問題的原因僅在您要刪除檔案到資源回收筒時，資源回收筒的檔案和資料夾已滿或剩餘空間不足時，才會顯示。因此，如果遇到錯誤並且無法將檔案刪除到資源回收筒，則可以使用以下兩種解決方案擺脫「此資料夾太大，因此無法放入資源回收筒」的錯誤，並將檔案和資料夾移動到資源回收筒。..解決方案1：從資源回收筒刪除不需要的檔案..如前所述，由於資源回收筒沒有足夠的可用空間，您會收到此錯誤。簡而言之，您要刪除一部分檔案，從而使資源回收筒中的剩餘空間大於即將放入的檔案或資料夾。...請記住，一旦從資源回收筒中刪除檔案和資料夾，它們將很難還原和恢復。因此，請僅刪除您確定將來不需要的檔案。一旦誤刪，請立即啟動.Bitwar Data Recovery.救回永久刪除的檔案。..步驟1：選擇資源回收筒救援和要救援的檔案類型，然後單擊掃描。...步驟2：找到掃描到的要救援的檔案，預覽後復原它。...解決方案2：增加分配給資源回收筒的磁碟空間..步驟1： 右鍵點擊桌面上的資源回收筒，然後點擊「內容」。..步驟2：在「資源回收筒內容」中，選擇要從中刪除檔案並出現上述錯誤的分割區。接下來，在「選定位置的設定」部分中，為所選驅動器的資源回收筒分配更多空間。然後單擊應用按鈕。...您可能還想閱讀Windows 10指南中如何從資源回收筒中自動刪除舊檔案的方法。. .                                                    ,416
https://ithelp.ithome.com.tw/articles/10255222,Joining Two More Locales for the 2021 Lottery Millionaire Raffle!,,2021-01-22 18:35:31,,"                                                            .One man's love for winning the lottery is another man's passion. Dennis Kahler, a plumber from St. Louis, won the national lottery three times but never thought that winning the lottery again would be possible. He won the national lottery four times - the last time with a whopping prize of one million dollars. To this day, he continues to play the lottery game hoping that luck will be on his side. The problem is, while fortune has been on his side for the past three decades, nothing has happened to help finance his crazy lifestyle. So, does he have to continue to play the same lottery game over? .วิเคราะห์ ลาว.Well, the answer is not yet known. A thirty-year-old man from Louisiana who plays the lottery every chance he gets, as well as a number of friends and family members, are all missing out on the Eurojackpot. Unfortunately, no tickets were available to these fortunate winners to win the big jackpot. This failure to win the national Eurojackpot was the straw that broke the camel's back, and now they are stuck with tickets worth a fraction of their initial purchase cost..This failure to win the national lottery prompted officials in Italy to review the laws in terms of Lottery code and regulations so that they can make changes that will make it easier for people like these to win. It has been reported that officials have made some improvements to the Italy Lottery Code since it was first introduced in 2021. One such change that has been implemented is that online ticket sales were allowed to begin in April of 2021..This means that anyone who bought one EuroLotto ticket prior to the introduction of the new system, could still be eligible to win the jackpot on the same date. According to lottery officials, they are expecting around twenty-five percent of these online ticket sales to come in during the January timeframe. If this is true, this would translate to about one hundred and forty million EuroLOTS jackpot prizes up for grabs in January of 2021..There was another important announcement made regarding the new lottery scheme in Italy, and this was concerning the addition of the cities of Liechtenstein and Nassau as two additional Lottery Cities in Italy. The announcement made by officials stated that more tickets for the three additional cities would be added to the existing number of tickets available in the main lottery in Italy. For those of you wondering if there is a connection between these two cities and the lottery winnings, the answer is a resounding yes!.These two cities will each receive approximately eight million EuroLOTS prizes, which is approximately three quarters of the total prize money. This means that the chances of winning the top prize in the Italy Lottery are greatly increased. Although no official word has been released as of yet, it is likely that the addition of these two new cities will increase the chances of winning the jackpot in the Italy Lottery. For more information regarding the Italy Lottery, including all of the latest details, be sure to check out the official website of the Lotto Italy syndicate.. .                                                    ",345
https://ithelp.ithome.com.tw/articles/10255215,分享一個好用的進銷存軟體,,2021-01-22 16:17:32,,                                                            .分享一個好用的進銷存軟體 eztool ，.用這軟體處理客人訂單有一些時間了，.非常的方便又好用，.剛開始我做客戶訂單時都用execl，.但execl能力不強的我，.常常覺得資料很亂，.後來上網找到eztool軟體，.免費下載使用後，.發現太方便了，.剛開始不太上手，.但可以在youtube找到教學，.很快的就習慣了它的介面，.裡面有些功能讓我覺很真好用，.如：拆單、併單、設定出貨日、促銷設定、客戶管理查尋、分析報表…等。.功能真的很多，.介面操作也很容易的就能學會，.如果有不了解的也可以在官網找到相關資訊，.或是也可以跟他們服務人員聯絡，.如果您也有要找進銷存軟體，.這套eztool軟體推薦您可以下載使用看看，.對做生意有很大的幫助的。.EzTooL官網: .http://www.eztool.com.tw. .                                                    ,294
https://ithelp.ithome.com.tw/articles/10255213,Kerberos,,2021-01-22 13:38:46,,                                                            .-Kerberos操作（來源：.Fulvio Ricciardi.）.根據CISSP官方學習指南，識別是“一個對象自稱身份和責任的過程。”..Kerberos是用於驗證主體身份的協議。在Kerberos V4和更早的版本中，身份驗證不需要密碼。用戶的身份將對用戶進行身份驗證。在Kerberos V5中，引入了預身份驗證以擴展協議。.身份驗證是“在顯示身份時確認實體的身份”（NIST SP 800-32），或“通常是允許用戶訪問信息中的資源的前提條件，即驗證用戶，過程或設備的身份。系統”（FIPS 200）。..該TGT（票證授予票證），如果認證成功頒發給客戶端。..5個為什麼技術..	問：為什麼客戶端將用戶的身份提交到身份驗證服務器（AS）？.答：供服務器從目錄中識別主題。..	問：為什麼AS服務器識別主題？.答：通過驗證時間戳來驗證主題。..	問：為什麼AS服務器對主題進行身份驗證？.答：通過頒發TGT（授予票證的票證）來聲明受試者的身份。..	問：AS服務器為什麼要斷言主體的身份？.答：供客戶索取服務票。..-使用Kerberos進行身份驗證（來源：.OMAL PERERA.）..預認證(Pre-Authentication).在Kerberos的早期版本（v4和更早版本）中，身份驗證不需要密碼。一個簡單的有效用戶名將對用戶進行身份驗證。在Kerberos v5中，需要密碼。這稱為預身份驗證。可以禁用預身份驗證，以便為舊的Kerberos v4庫和Unix應用程序等提供向後兼容性。.警告：禁用預身份驗證會嚴重降低安全性。.資料來源：蓋爾·奧爾森（.Geir Olsen.）..參考..	.Kerberos..	.Kerberos簡化..	.Kerberos（協議）..	.Kerberos預認證..	.Kerberos網絡身份驗證服務（RFC 4120）..	.Kerberos預身份驗證的通用框架（RFC 6113）..	.Kerberos操作..資料來源： .Wentz Wu QOTD-20210109. .                                                    ,395
https://ithelp.ithome.com.tw/articles/10232675,[Linebot]  來吧！Instagram 圖片/影音快速下載神器！我想要IG上的男/女神們照片,,2021-01-22 23:54:37,,"                                                            .當你google「Instagram api」時，會發現Fackbook官方的教學極其複雜又麻煩，要申請要網域要錄影等等..(各位應該知道 Instagram 早就被臉書爸爸所收購了吧).此時內心OS應該是:「我只是想做個小專案而已啊！！！怎麼這麼麻煩！！」.為了避免發生這種麻煩事.所以小弟研究了一下 Instagram api 運作方式及使用方法.就這樣我開啟了瀏覽器開發者模式，切到 Network，踏上了觀察 Instagram 網站邏輯...因為我用此篇 api 實作了一個【Instagram小幫手】的Linebot.以下為實作 Demo 結果....開始實作前，先告知大家，此做法有風險，因為有可能該帳號會被封鎖的危險XD..取得帳戶資料後請勿做商業行為，否則後果自行承擔唷~...進入正題..此次實作目的:...獲取 Instagram 上公開帳號的的資料(照片/影片/文章/愛心數/留言數等等)..獲取 Instagram 個人帳戶中的追蹤名單...需要使用的api為以下:....https://www.instagram.com/{account}/?a=1....https://www.instagram.com/graphql/query/?query_hash={XXXXXXXXXXXX}....第一組 api 只需要輸入該 Instagram 的 account 即可取得資訊.第二組 api 只要 .query_hash. 參數不同，就能對應到各種不同的 api，所以需要仔細觀察一下喔~..實作步驟為:...先獲取 Instagram 上公開帳號的 ID 流水號(.此部分很重要，因為後面所有 api 都需要 ID 的存在.).打這支 .https://www.instagram.com/{account}/?a=1.理應回傳的資料應該為...    {        ""logging_page_id"":""profilePage_XXXXXXXX"",        ""show_suggested_profiles"":false,        ""show_follow_dialog"":false,        ""graphql"": {            ""user"": {                ...                ...                ""id"": ""XXXXXXX"", //用戶ID，很重要!!                ...                ...            }        }     }...透過步驟一的 ID 獲取 Instagram 上公開帳號.文章列表.打這支 .https://www.instagram.com/graphql/query/?參數一&參數二.參數一:.query_hash=2c4c2e343a8f64c625ba02b2aa12c7f8. > .固定的 queryhash，表示只要用這組queryhash就可以取得個人資料.參數二:.variables = { id = 剛剛取得用戶 ID, first= 想要顯示數量(最多50筆), after: end_cursor(如沒有帶這個參數預設就會是第一頁) }.理應回傳的資料應該為...    {        ""data"": {            ""user"": {                ""edge_owner_to_timeline_media"": {                ""page_info"": {                    ""has_next_page"": true,                    ""end_cursor"": ""XXXXXXXXX"" //上方after該帶入的資料                    },                 ""edges"":[                     {                         ""node"":{                         ...                         ...                         ...                         ""shortcode"":XXXXXX //等等下個步驟會使用到，是取得單篇文章的資訊                         }                     },                     ...                     ...                 ]                 ....                }            }         }    }...透過步驟二的 shortcode 獲取 Instagram 上公開帳號.單篇文章.資訊.打這支 .https://www.instagram.com/graphql/query/?參數一&參數二.參數一:.query_hash=2c4c2e343a8f64c625ba02b2aa12c7f8. > .固定的 queryhash，表示只要用這組queryhash就可以取得個人資料.參數二:.variables = { ""shortcode"":""XXXXXXXXX"" }.理應回傳的資料應該為...{    ""data"": {    ""shortcode_media"": {        ""__typename"": ""GraphSidecar"",        ""id"": ""2487561472394557464"",        ""shortcode"": ""CKFl_q_BngY"",        ...        ...        ...    }}..整個api邏輯是這樣.如此一來就能獲的 Instagram 用戶的個人資料了...總結.最後需要提醒一下.上述 Instagram api 僅能取得..公開帳號..公開帳號..公開帳號..的資料，很重要!需要講三遍XD..私人帳號的部分..畢竟 Instagram 本來就有固定規則是「先追蹤，若對方同意追蹤」才能查看資料...或許有人會質疑：「幹嘛這麼大費周章！我直接看IG就好了啊！」.我的答覆：「實作動機是我在IG上有追蹤一個可愛的明星，然後有天看到她po文章照片，我實在覺得很可愛XD，想要保存照片當作手機桌布(抱歉癡漢本色爆發XDD)，但此時我發現IG沒有提供【下載圖片/影片】的功能，然而必須要透過電腦瀏覽器的開發者模式，找到相對應的 Elements，再細追圖片來源在哪或者是找另外的app或網站額外下載。.由於這樣實在太麻煩了！所以才做了這個 Linebot，同時如果在朋友群組內也可以直接顯示該IG帳號的照片讓朋友一起看，而且不得不說....Linebot的輪播效果真的很棒，所以看的時候觀感更好XDDD」...若真的有蠻多人有興趣的話.我會在po QRcode 及 寫詳細的教學實作文章出來.感謝大大們的觀看. .                                                    ",572
https://ithelp.ithome.com.tw/articles/10255226,eztool   進銷存系統 使用心得,,2021-01-23 03:04:40,,"                                                            .在百貨服飾業13年一直負責公司的電腦架構當初使用一套鵬x的進銷存因為習慣所以一直就是習慣使用.創業初期一直找尋進銷存系統 , 無奈前東家幾十億營業額的系統非草創期的我能夠承受 (有種人走茶涼的感受).於是前兩年網拍生涯一直用excel表格處理著瑣碎的庫存.第三年營業額的增長增加了實體門市.需要員工同仁方便使用更需要及時管理庫存於是找尋著台灣的進銷存 , 門市POS ,ERP.無奈台灣最熱門就餐飲業 , 門市POS幾乎多為餐飲設定 , 進銷存多為生產製造業 或者當初很熱門的租書網咖.反而服飾業極少 , 有的也多是貴桑桑的ERP , 從百貨走向夜市街邊 才體認到原來這麼大的市場卻鮮少有人為了他開發軟體 , 更發現整條街的老闆都不用電腦系統管理庫存 , 永遠是厚厚的本本記錄著戰果 ..已經忘記何時何地搜索到EZTOOL這套軟體 , 也忘了當初試用了幾套軟體了 , 在懷疑EZTOOL終生免費的時候使用 , 無奈現今已經完全無法離開 , EZTOOL的使用方便度與介面親合程度 , 以使用完整一年多的我來說真心推薦 .. .                                                    ",584
https://ithelp.ithome.com.tw/articles/10255219,ReactFiber節點的更新入口：beginWork,,2021-01-23 14:20:55,,"                                                            .React的更新任務主要是調用壹個叫做workLoop的工作循環去構建workInProgress樹，構建過程分為兩個階段：向下遍歷和向上回溯，向下和向上的過程中會對途徑的每個節點進行beginWork和completeWork。..本文即將提到的beginWork是處理節點更新的入口，它會依據fiber節點的類型去調用不同的處理函數。..React對每個節點進行beginWork操作，進入beginWork後，首先判斷節點及其子樹是否有更新，若有更新，則會在計算新狀態和diff之後生成新的Fiber，然後在新的fiber上標記flags（effectTag），最後return它的子節點，以便繼續針對子節點進行beginWork。若它沒有子節點，則返回null，這樣說明這個節點是末端節點，可以進行向上回溯，進入completeWork階段。..點擊.進入React源碼調試倉庫。..beginWork的工作流程如下圖，圖中簡化了流程，只對App節點進行了beginWork處理，其余節點流程相似...職責..通過概述可知beginWork階段的整體工作是去更新節點，並返回子樹，但真正的beginWork函數只是節點更新的入口，不會直接進行更新操作。作為入口，它的職責很明顯，攔截無需更新的節點。同時，它還會將context信息入到棧中（beginWork入棧，completeWork出棧），暫時先不關註。..function beginWork(    current: Fiber | null,    workInProgress: Fiber,    renderLanes: Lanes): Fiber | null {  // 獲取workInProgress.lanes，可通過判斷它是否為空去判斷該節點是否需要更新  const updateLanes = workInProgress.lanes;  // 依據current是否存在判斷當前是首次掛載還是後續的更新  // 如果是更新，先看優先級夠不夠，不夠的話就能調用bailoutOnAlreadyFinishedWork  // 復用fiber節點來跳出對當前這個節點的處理了。  if (current !== null) {    const oldProps = current.memoizedProps;    const newProps = workInProgress.pendingProps;    if (        oldProps !== newProps ||        hasLegacyContextChanged()    ) {      didReceiveUpdate = true;    } else if (!includesSomeLane(renderLanes, updateLanes)) {      // 此時無需更新      didReceiveUpdate = false;      switch (workInProgress.tag) {        case HostRoot:          ...        case HostComponent:          ...        case ClassComponent:          ...        case HostPortal:          ...      }      // 攔截無需更新的節點      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);    }  } else {    didReceiveUpdate = false;  }  // 代碼走到這裏說明確實要去處理節點了，此時會根據不同fiber的類型  // 去調用它們各自的處理函數  // 先清空workInProgress節點上的lanes，因為更新過程中用不到，  // 在處理完updateQueue之後會重新賦值  workInProgress.lanes = NoLanes;  // 依據不同的節點類型來處理節點的更新  switch (workInProgress.tag) {    case IndeterminateComponent:      ...    case LazyComponent:      ...    case FunctionComponent:      ...      return updateFunctionComponent(          current,          workInProgress,          Component,          resolvedProps,          renderLanes,      );    }    case ClassComponent:      ...      return updateClassComponent(          current,          workInProgress,          Component,          resolvedProps,          renderLanes,      );    }    case HostRoot:      return updateHostRoot(current, workInProgress, renderLanes);    case HostComponent:      return updateHostComponent(current, workInProgress, renderLanes);    case HostText:      return updateHostText(current, workInProgress);    ......  }}..可以看出，壹旦節點進入beginWork，會先去識別該節點是否需要處理，若無需處理，則調用.bailoutOnAlreadyFinishedWork.復用節點，否則才真正去更新。..如何區分更新與初始化過程..判斷current是否存在。..這首先要理解current是什麽，基於雙緩沖的規則，調度更新時有兩棵樹，展示在屏幕上的current Tree和正在後臺基於current樹構建的.workInProgress Tree。那麽，current和workInProgress可以理解為鏡像的關系。workLoop循環當前遍歷到的workInProgress節點來自於它對應的current節點父級fiber的子節點（即current節點），所以workInProgress節點和current節點也是鏡像的關系。..如果是首次渲染，對具體的workInProgress節點來說，它是沒有current節點的，如果是在更新過程，由於current節點已經在首次渲染時產生了，所以workInProgress節點有對應的current節點存在。..最終會根據節點是首次渲染還是更新來決定是創建fiber還是diff fiber。只不過更新時，如果節點的優先級不夠會直接復用已有節點，即走跳出（bailout）的邏輯，而不是去走下面的更新邏輯。..復用節點過程..節點可復用表示它無需更新。在上面beginWork的代碼中可以看到，若節點的優先級不滿足要求，說明它不用更新，會調用.bailoutOnAlreadyFinishedWork.函數，去復用current節點作為新的workInProgress樹的節點。..beginWork函數中攔截無需更新節點的邏輯..if (!includesSomeLane(renderLanes, updateLanes)) {  ...  // 此時無需更新，攔截無需更新的節點  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);}..beginWork它的返回值有兩種情況：...返回當前節點的子節點，然後會以該子節點作為下壹個工作單元繼續beginWork，不斷往下生成fiber節點，構建workInProgress樹。..返回null，當前fiber子樹的遍歷就此終止，從當前fiber節點開始往回進行completeWork。...bailoutOnAlreadyFinishedWork.函數的返回值也是如此。...返回當前節點的子節點，前置條件是當前節點的子節點有更新，此時當前節點未經處理，是可以直接復用的，復用的過程就是復制壹份current節點的子節點，並把它return出去。..返回null，前提是當前子節點沒有更新，當前子樹的遍歷過程就此終止。開始completeWork。...從這個函數中，我們也可以意識到，識別當前fiber節點的子樹有無更新顯得尤為重要，這可以決定是否終止當前Fiber子樹的遍歷，將復雜度直接降低。實際上可以通過fiber.childLanes去識別，childLanes如果不為空，表明子樹中有需要更新的節點，那麽需要繼續往下走。..標記fiber.childLanes的過程是在開始調度時發生的，在.markUpdateLaneFromFiberToRoot. 函數中..帶著上邊的認知，來看壹下源碼了解具體的復用過程：..function bailoutOnAlreadyFinishedWork(  current: Fiber | null,  workInProgress: Fiber,  renderLanes: Lanes): Fiber | null {  if (current !== null) {    workInProgress.dependencies = current.dependencies;  }  // 標記有跳過的更新  markSkippedUpdateLanes(workInProgress.lanes);  // 如果子節點沒有更新，返回null，終止遍歷  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {    return null;  } else {    // 子節點有更新，那麽從current上復制子節點，並return出去    cloneChildFibers(current, workInProgress);    return workInProgress.child;  }}..總結..beginWork的主要功能就是處理當前遍歷到的fiber，經過壹番處理之後返回它的子fiber，壹個壹個地往外吐出fiber節點，那麽workInProgress樹也就會被壹點壹點地構建出來。..這是beginWork的大致流程，但實際上，核心更新的工作都是在各個更新函數中，這些函數會安排fiber節點依次進入兩大處理流程：計算新狀態和Diff算法，限於篇幅，這兩個內容會分兩篇文章詳細講解，可以持續關註。. .                                                    ",371
https://ithelp.ithome.com.tw/articles/10255090,React的秘密-原理解析第壹篇：核心概念,,2021-01-22 17:32:24,,"                                                            .作為壹個構建用戶界面的庫，React的核心始終圍繞著更新這壹個重要的目標，將更新和極致的用戶體驗結合起來是React團隊壹直在努力的事情。為什麽React可以將用戶體驗做到這麽好？我想這是基於以下兩點原因：...Fiber架構和Scheduler出色的調度模式可以實現異步可中斷的更新行為。..優先級機制貫穿更新的整個周期...本文是對React原理解讀系列的第1篇文章，後續的文章會定期更新，歡迎持續關註。在正式開始之前，我們先基於以上的這兩點展開介紹，以便對壹些概念可以先有個基礎認知。...配合的源碼調試環境在.這裏. ，會跟隨React主要版本進行更新，歡迎隨意下載調試。...Fiber是什麽..Fiber是什麽？它是React的最小工作單元，在React的世界中，壹切都可以是組件。在普通的HTML頁面上，人為地將多個DOM元素整合在壹起可以組成壹個組件，HTML標簽可以是組件（HostComponent），普通的文本節點也可以是組件（HostText）。每壹個組件就對應著壹個fiber節點，許多個fiber節點互相嵌套、關聯，就組成了fiber樹，正如下面表示的Fiber樹和DOM的關系壹樣：..    Fiber樹                    DOM樹   div#root                  div#root      |                         |    <App/>                     div      |                       /   \     div                     p     a    /   ↖   /      ↖  p ----> <Child/>             |             a..壹個DOM節點壹定對應著壹個Fiber節點，但壹個Fiber節點卻不壹定有對應的DOM節點。..fiber 作為工作單元它的結構如下：..function FiberNode(  tag: WorkTag,  pendingProps: mixed,  key: null | string,  mode: TypeOfMode,) {  // Fiber元素的靜態屬性相關  this.tag = tag;  this.key = key; // fiber的key  this.elementType = null;  this.type = null; // fiber對應的DOM元素的標簽類型，div、p...  this.stateNode = null; // fiber的實例，類組件場景下，是組件的類，HostComponent場景，是dom元素  // Fiber 鏈表相關  this.return = null; // 指向父級fiber  this.child = null; // 指向子fiber  this.sibling = null; // 同級兄弟fiber  this.index = 0;  this.ref = null; // ref相關  // Fiber更新相關  this.pendingProps = pendingProps;  this.memoizedProps = null;  this.updateQueue = null; // 存儲update的鏈表  this.memoizedState = null; // 類組件存儲fiber的狀態，函數組件存儲hooks鏈表  this.dependencies = null;  this.mode = mode;  // Effects  // flags原為effectTag，表示當前這個fiber節點變化的類型：增、刪、改  this.flags = NoFlags;  this.nextEffect = null;  // effect鏈相關，也就是那些需要更新的fiber節點  this.firstEffect = null;  this.lastEffect = null;  this.lanes = NoLanes; // 該fiber中的優先級，它可以判斷當前節點是否需要更新  this.childLanes = NoLanes;// 子樹中的優先級，它可以判斷當前節點的子樹是否需要更新  /*  * 可以看成是workInProgress（或current）樹中的和它壹樣的節點，  * 可以通過這個字段是否為null判斷當前這個fiber處在更新還是創建過程  * */  this.alternate = null;}..fiber架構下的React是如何更新的..首先要明白，React要完成壹次更新分為兩個階段： render階段和commit階段，兩個階段的工作可分別概括為新fiber樹的構建和更新最終效果的應用。..render階段..render階段實際上是在內存中構建壹棵新的fiber樹（稱為workInProgress樹），構建過程是依照現有fiber樹（current樹）從root開始深度優先遍歷再回溯到root的過程，這個過程中每個fiber節點都會經歷兩個階段：beginWork和completeWork。組件的狀態計算、diff的操作以及render函數的執行，發生在beginWork階段，effect鏈表的收集、被跳過的優先級的收集，發生在completeWork階段。構建workInProgress樹的過程中會有壹個workInProgress的指針記錄下當前構建到哪個fiber節點，這是React更新任務可恢復的重要原因之壹。..如下面的動圖，就是render階段的簡要過程：...commit階段..在render階段結束後，會進入commit階段，該階段不可中斷，主要是去依據workInProgress樹中有變化的那些節點（render階段的completeWork過程收集到的effect鏈表）,去完成DOM操作，將更新應用到頁面上，除此之外，還會異步調度useEffect以及同步執行useLayoutEffect。..這兩個階段都是獨立的React任務，最後會進入Scheduler被調度。render階段采取的調度優先級是依據本次更新的優先級來決定的，以便高優先級任務的介入可以打斷低優先級任務的工作；commit階段的調度優先級采用的是最高優先級，以保證commit階段同步執行不可被打斷。..Scheduler 的作用..Scheduler用來調度執行上面提到的React任務。..何為調度？依據任務優先級來決定哪個任務先被執行。調度的目標是保證高優先級任務最先被執行。..何為執行？Scheduler執行任務具備壹個特點：即根據時間片去終止任務，並判斷任務是否完成，若未完成則繼續調用任務函數。它只是去做任務的中斷和恢復，而任務是否已經完成則要依賴React告訴它。Scheduler和React相互配合的模式可以讓React的任務執行具備異步可中斷的特點。..優先級機制..為了區分任務的輕重緩急，React內部有壹個從事件到調度的優先級機制。事件本身自帶優先級屬性，它導致的更新會基於事件的優先級計算出更新自己的優先級，更新會產生更新任務，更新任務的優先級由更新優先級計算而來，更新任務被調度，所以需要調度優先級去協調調度過程，調度優先級由更新任務優先級計算得出，就這樣壹步壹步，React將優先級的概念貫穿整個更新的生命周期。..React優先級相關的更多介紹請移步 .React中的優先級.。..雙緩沖機制..雙緩沖機制是React管理更新工作的壹種手段，也是提升用戶體驗的重要機制。..當React開始更新工作之後，會有兩個fiber樹，壹個current樹，是當前顯示在頁面上內容對應的fiber樹。另壹個是workInProgress樹，它是依據current樹深度優先遍歷構建出來的新的fiber樹，所有的更新最終都會體現在workInProgress樹上。當更新未完成的時候，頁面上始終展示current樹對應的內容，當更新結束時（commit階段的最後），頁面內容對應的fiber樹會由current樹切換到workInProgress樹，此時workInProgress樹即成為新的current樹。..function commitRootImpl(root, renderPriorityLevel) {    ...    // finishedWork即為workInProgress樹的根節點，    // root.current指向它來完成樹的切換    root.current = finishedWork;    ...}..兩棵樹在進入commit階段時候的關系如下圖，最終commit階段完成時，兩棵樹會進行切換。...在未更新完成時依舊展示舊內容，保持交互，當更新完成立即切換到新內容，這樣可以做到新內容和舊內容無縫切換。..總結..本文基本概括了React大致的工作流程以及角色，本系列文章會以更新過程為主線，從render階段開始，壹直到commit階段，講解React工作的原理。除此之外，會對其他的重點內容進行大篇幅分析，如事件機制、Scheduler原理、重點Hooks以及context原理。..本系列文章耗時較長，落筆撰寫時，17版本還未發布，所以參照的源碼版本為16.13.1、17.0.0-alpha.0以及17共三個版本，我曾經對文章中涉及到的三個版本的代碼進行過核對，邏輯基本無差別，可放心閱讀。. .                                                    ",454
https://ithelp.ithome.com.tw/articles/10255240,Site Cache（網站快取） 、Browser Cache（瀏覽器快取） 、Server Cache（主機端快取） 3 者有什麼分別？,,2021-01-24 16:02:09,,                                                            ..雖然這 3 者的目的，都是減輕網站的存取壓力和負擔，但它們真的是一樣的嗎？這位作者簡單指出當中的差異和簡單定義，可以協助新手快速了解【快取】的種類，當然還有很多其他快取機制，但不在這次討論範圍。..快取常見的工作如下；...把需要運算的重複頁面靜態化存入 CDN 之中，後來者或訪客不需要重複一次運算頁面。..合併重複、沒有作用、多餘和壓縮 HTML、CSS 或 JS 檔等等。...引用原文和參考資料：..什麼是 Site Cache、Browser Cache 和 Server Cache 的分別...Site Cache（網站快取）..這是最常見的一種形式，一般 WordPress 的快取外掛會分配在 CDN（內容傳遞網路 Content Delivery Network）的技術裡，把網站的內容存放在世界各地的相關主機之中，訪客可以瀏覽距離自己最近的主機位置，並從中存取到網站需要顯示的內容（HTML 檔、圖片和資料）等等，市場上的免費選擇有很多，也是新手比較容易理解的快取。知名的 WordPress 快取外掛包含：WP Rocket、WP Fastest Cache、WP Super Cache 和 W3 Total Cache，一般新手要求不高選擇免費的外掛就足夠應用有餘。...Browser Cache（瀏覽器快取）..這個和 Site Cache（網站快取）不同之處，我們的瀏覽器是本機端的軟體，存放在我們使用中的桌面電腦、筆記本電腦或手機之中，而非第三方或世界其他地方的伺服器。我們可以輕鬆透過瀏覽器像常用的 Google Chrome、Mozilla Firefox、Microsoft Edge 或 Opera 中的設定介面，會告訴我們存放【暫存檔 Temporary files 】的位置和資訊，一般我們所使用的電腦，每經過一段時間或記憶體不足時，就會自動移除和釋出空間。如果大家發現清除 Site Cache（網站快取）也無法顯示新的內容，可能就是需要清除 Browser Cache（瀏覽器快取）的適當時機。...Server Cache（主機端快取）..主機端的快取是非常進階的議題，一般新手部落格或站長也非一定需要了解這塊區域，但如果您的網站成長到一定程度，遇上效能的瓶頸，無可奈何必定需要加強主機端的快取著手，這需要找專業的工程師和俱豐富經驗的架站者協助您，門檻和技術相對就不是一般人能夠勝任。但加速的效果非常明顯，...您可能會有興趣的 WordPress 相關文章：...免費建立網站教學，看這篇就足夠....WordPress 教學：小樹苗成長課程....HTML 標題語法 h1 至 h6 的使用原則和 SEO 的影響因素....免費 WordPress 新手必備素材包....什麼是 DA (Domain Authority 網域權威值) 和 PA (Page Authority 頁面權威值) ？....免費高品質和可商業使用圖庫推薦....如何選擇合適的免費或付費 WordPress 佈景主題？....100 個安裝 WordPress 後的小技巧....【Google Fonts 應用】如何在 WordPress 網站上使用 Google 中文字體？....WPWebHost 建立部落格完整流程 – 從 Logo 設計到 SEO 最佳化....為什麼 WordPress 是免費？....什麼是 .WordPress 社群生態普查與研習 - 網站迷谷.？...一群喜歡網站架設的愛好者.推動 .WordPress. 社群持續的健康發展.建立關愛和共融的互動社群.適合完全沒有任何基礎和.不懂程式的入門者和新手.只要您勇敢踏出第一步.要建立自己的部落格或網站.其實沒有非常困難..第一次網站製作嗎？.歡迎來到我們的社團.學習網頁設計..免費 WordPress 線上影片教學課程..WordPress Valley - 網站迷谷【免費教學網站】..WordPress Valley - 網站迷谷【Facebook 討論社團】..WordPress Valley - 網站迷谷【追蹤 Instagram】. .                                                    ,411
https://ithelp.ithome.com.tw/articles/10255229,[開發經驗分享]如何中斷執行中的 Task(任務),,2021-01-23 15:12:24,,"                                                            .情境..在做大數據分析時，由於需要從幾千萬甚至幾億筆資料中做運算，應用程式就整個不能動，若中間機器有要做甚麼事，例如Windows要更新或者要變更甚麼設定，就只能癡癡地等它跑完，或者直接關閉應用程式，但是分析狀態還是在執行中，但實際上已中斷了，所以需要相應的處理，也就是把狀態修改為暫停中，必須新增一個暫停功能，所以在這邊分享一個簡單的，也實作成功的方法。..說明..主要是基於向.CancellationTokenSource.這個物件拋送Cancel的訊息，然後Task接收到之後，去執行執行緒的中斷。..程式碼..private CancellationTokenSource cts;private async void btnAnalysis_Click(object sender, EventArgs e){    cts = new CancellationTokenSource();    string projectNo = """";    try    {        await Task.Run(() =>        {            try            {				//註冊執行續中斷事件                using (cts.Token.Register(Thread.CurrentThread.Abort))                {                    //執行大量運算                }            }            catch (ThreadAbortException)            {                //接收到執行緒中斷例外狀況				//修改專案狀態為暫停中，並跳出訊息                service.Pause(projectNo);                MessageBox.Show(""已暫停"");            }        }, cts.Token);    }    catch (ThreadAbortException)    {        //這邊還是會拋送執行緒中斷例外，忽略即可    }}//取消按鈕private void btnCancel_Click(object sender, EventArgs e){    if (cts != null && !cts.IsCancellationRequested)    {        cts.Cancel();    }}..參考來源..https://stackoverflow.com/questions/4359910/how-to-abort-a-task-like-aborting-a-thread-thread-abort-method. .                                                    ",490
https://ithelp.ithome.com.tw/articles/10255241,laravel 8部署到免費的Heroku,,2021-01-24 23:01:19,,"                                                            .必備條件.以及安裝 PHP、Composer和 Heroku CLI。.Heroku 使用者帳戶.像是下面...避免意外就從建立專案開始..laravel new shopApp..先建立起 專案叫shopApp..接下來到跟目錄下新增名稱叫 .Procfile. 的檔案.裡面新增下面這行後存檔..web: vendor/bin/heroku-php-apache2 public/ > Procfile...git進行初始化..git initgit add .git commit -m ""new laravel project""..建立在heroku上自己的專案名稱..heroku apps:create yourAppName...像是這樣..heroku git:remote -a yourapp 傳到git中git push heroku master  //把資料push到herokuheroku open  //開啟網頁..會出現這個畫面 原因是Key設定沒加.先回到heroku的專案中 進去設定...將laravel專案中.env 資料放進去尤其是APP_key一定要放...最後可以用指令 .heroku open. 再次重新開啟...成功..參考:.https://dotblogs.com.tw/What_s_Note/2020/06/12/155738..https://devcenter.heroku.com/articles/getting-started-with-laravel. .                                                    ",377
https://ithelp.ithome.com.tw/articles/10255202,laravel 8 (一)   建立專案及資料庫設定,,2021-01-24 17:35:33,,"                                                            .安裝專案..composer global require laravel/installer//將Laravel以全域的方式安裝在composer裡laravel new example-app//建立example-app的專案php artisan serve//啟動內建的伺服器..建立專案後會出現下面的圖...啟動內建伺服器如果出現下面的圖代表建立成功...先建立個簡單的model..php artisan make:model Item -rmc...之後會建立出.....位置..名稱......app/Models/Model..Item.php....app/Http/Controller..ItemController.php....database/migrations..建立時間_create_items_table.php.....接下來是資料庫設定.在專案下有個.env的檔案中..DB_CONNECTION=mysqlDB_HOST=127.0.0.1DB_PORT=3306DB_DATABASE=shoppingsite//預設專案名稱 可以自行更改DB_USERNAME=rootDB_PASSWORD=..可以設定你要哪一種database及名稱..設定完後..進入config/database.php中.可以發現這行程式碼..'default' => env('DB_CONNECTION', 'mysql'),..env(自行去.env檔案中找尋相對應參數,預設值).所以laravel 預設 mysql為預設DB..在下方connections中會自行從.env找出先前設定的參數.當然也可以在.env中不設定參數直接修改database的資料.不過由於git不會上傳env等資料.所以為了保密建議直接修改env就好了..'mysql' => [            'driver' => 'mysql',            'url' => env('DATABASE_URL'),            'host' => env('DB_HOST', '127.0.0.1'),            'port' => env('DB_PORT', '3306'),            'database' => env('DB_DATABASE', 'forge'),            'username' => env('DB_USERNAME', 'forge'),            'password' => env('DB_PASSWORD', ''),            'unix_socket' => env('DB_SOCKET', ''),            'charset' => 'utf8mb4',            'collation' => 'utf8mb4_unicode_ci',            'prefix' => '',            'prefix_indexes' => true,            'strict' => true,            'engine' => null,            'options' => extension_loaded('pdo_mysql') ? array_filter([                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),            ]) : [],        ],..設定完後就完成啦之後慢慢補. .                                                    ",323
https://ithelp.ithome.com.tw/articles/10255221,React狀態計算解密,,2021-01-24 22:46:38,,"                                                            .點擊.進入React源碼調試倉庫。..概述..壹旦用戶的交互產生了更新，那麽就會產生壹個update對象去承載新的狀態。多個update會連接成壹個環裝鏈表：updateQueue，掛載fiber上，.然後在該fiber的beginWork階段會循環該updateQueue，依次處理其中的update，這是處理更新的大致過程，也就是計算組件新狀態的本質。在React中，類組件與根組件使用壹類update對象，函數組件則使用另壹類update對象，但是都遵循壹套類似的處理機制。暫且先以類組件的update對象為主進行講解。..相關概念..更新是如何產生的呢？在類組件中，可以通過調用setState產生壹個更新：..this.setState({val: 6});..而setState實際上會調用.enqueueSetState.，生成壹個update對象，並調用.enqueueUpdate.將它放入updateQueue。..const classComponentUpdater = {  enqueueSetState(inst, payload, callback) {   ...   // 依據事件優先級創建update的優先級   const lane = requestUpdateLane(fiber, suspenseConfig);   const update = createUpdate(eventTime, lane, suspenseConfig);   update.payload = payload;   enqueueUpdate(fiber, update);   // 開始調度   scheduleUpdateOnFiber(fiber, lane, eventTime);     ...  },};..假設B節點產生了更新，那麽B節點的updateQueue最終會是是如下的形態：..         A         /       /      B ----- updateQueue.shared.pending = update————     /                                       ^       |    /                                        |_______|   C -----> D ..updateQueue.shared.pending中存儲著壹個個的update。.下面我們講解以下update和updateQueue的結構。..update的結構..update對象作為更新的載體，必然要存儲更新的信息..const update: Update<*> = { eventTime, lane, suspenseConfig, tag: UpdateState, payload: null, callback: null, next: null,};...eventTime：update的產生時間，若該update壹直因為優先級不夠而得不到執行，那麽它會超時，會被立刻執行..lane：update的優先級，即更新優先級..suspenseConfig：任務掛起相關..tag：表示更新是哪種類型（UpdateState，ReplaceState，ForceUpdate，CaptureUpdate）..payload：更新所攜帶的狀態。....類組件中：有兩種可能，對象（{}），和函數（(prevState, nextProps):newState => {}）..根組件中：是React.element，即ReactDOM.render的第壹個參數....callback：可理解為setState的回調..next：指向下壹個update的指針...updateQueue的結構..在組件上有可能產生多個update，所以對於fiber來說，需要壹個鏈表來存儲這些update，這就是updateQueue，它的結構如下：..const queue: UpdateQueue<State> = { 	baseState: fiber.memoizedState, 	firstBaseUpdate: null, 	lastBaseUpdate: null, 	shared: { 		pending: null, 	},    effects: null,};..我們假設現在產生了壹個更新，那麽以處理這個更新的時刻為基準，來看壹下這些字段的含義：...baseState：前壹次更新計算得出的狀態，它是第壹個被跳過的update之前的那些update計算得出的state。會以它為基礎計算本次的state..firstBaseUpdate：前壹次更新時updateQueue中第壹個被跳過的update對象..lastBaseUpdate：前壹次更新中，updateQueue中以第壹個被跳過的update為起點壹直到的最後壹個update截取的隊列中的最後壹個update。..shared.pending：存儲著本次更新的update隊列，是實際的updateQueue。shared的意思是current節點與workInProgress節點共享壹條更新隊列。..effects：數組。保存update.callback !== null的Update.有幾點需要解釋壹下：....關於產生多個update對象的場景，多次調用setState即可...this.setState({val: 2});this.setState({val: 6});..產生的updateQueue結構如下：..可以看出它是個單向的環裝鏈表.. u1 ---> u2 ^        | |________|...關於更新隊列為什麽是環狀。.結論是：這是因為方便定位到鏈表的第壹個元素。updateQueue指向它的最後壹個update，updateQueue.next指向它的第壹個update。...試想壹下，若不使用環狀鏈表，updateQueue指向最後壹個元素，需要遍歷才能獲取鏈表首部。即使將updateQueue指向第壹個元素，那麽新增update時仍然要遍歷到尾部才能將新增的接入鏈表。而環狀鏈表，只需記住尾部，無需遍歷操作就可以找到首部。理解概念是重中之重，下面再來看壹下實現：..function enqueueUpdate<State>(fiber: Fiber, update: Update<State>) {   const updateQueue = fiber.updateQueue;   if (updateQueue === null) { 	  return;   }   const sharedQueue: SharedQueue<State> = (updateQueue: any).shared; // ppending是真正的updateQueue，存儲update   const pending = sharedQueue.pending;   if (pending === null) { // 若鏈表中沒有元素，則創建單向環狀鏈表，next指向它自己     update.next = update;   } else {     // 有元素，現有隊列（pending）指向的是鏈表的尾部update，     // pending.next就是頭部update，新update會放到現有隊列的最後     // 並首尾相連     // 將新隊列的尾部（新插入的update）的next指向隊列的首部，實現     // 首位相連     update.next = pending.next; // 現有隊列的最後壹個元素的next指向新來的update，實現把新update     // 接到現有隊列上     pending.next = update;   } // 現有隊列的指針總是指向最後壹個update，可以通過最後壹個尋找出整條鏈表   sharedQueue.pending = update;}...關於firstBaseUpdate 和 lastBaseUpdate，它們兩個其實組成的也是壹個鏈表：baseUpdate，以當前這次更新為基準，這個鏈表存儲的是上次updateQueue中第壹個被跳過的低優先級的update，到隊列中最後壹個update之間的所有update。關於baseState，它是第壹個被跳過的update之前的那些update計算的state。.這兩點稍微不好理解，下面用例子來說明：比如有如下的updateQueue：...A1 -> B1 -> C2 -> D1 - E2..字母表示update攜帶的狀態，數字表示update攜帶的優先級。Lanes模型中，可理解為數越小，優先級越高，所以 1 > 2..第壹次以1的渲染優先級處理隊列，遇到C2時，它的優先級不為1，跳過。那麽直到這次處理完updateQueue時，此時的baseUpdate鏈表為..C2 -> D1 - E2..本次更新完成後，firstBaseUpdate 為 .C2.，lastBaseUpdate 為 .E2.，baseState為.ABD.。..用firstBaseUpdate 和 lastBaseUpdate記錄下被跳過的update到最後壹個update的所有update，用baseState記錄下被跳過的update之前那些update所計算出的狀態。這樣做的目的是保證最終updateQueue中所有優先級的update全部處理完時候的結果與預期結果保持壹致。也就是說，盡管.A1 -> B1 -> C2 -> D1 - E2.這個鏈表在第壹次以優先級為1去計算的結果為ABD（因為優先級為2的都被跳過了），但最終的結果壹定是ABCDE，因為這是隊列中的所有update對象被全部處理的結果，下邊來詳細剖析updateQueue的處理機制。..更新的處理機制..處理更新分為三個階段：準備階段、處理階段、完成階段。前兩個階段主要是處理updateQueue，最後壹個階段來將新計算的state賦值到fiber上。..準備階段..整理updateQueue。由於優先級的原因，會使得低優先級更新被跳過等待下次執行，這個過程中，又有可能產生新的update。所以當處理某次更新的時候，有可能會有兩條update隊列：.上次遺留的和本次新增的.。.上次遺留的.就是從firstBaseUpdate 到 lastBaseUpdate 之間的所有update；.本次新增的.就是新產生的那些的update。..準備階段階段主要是將兩條隊列合並起來，並且合並之後的隊列不再是環狀的，目的方便從頭到尾遍歷處理。另外，由於以上的操作都是處理的workInProgress節點的updateQueue，所以還需要在current節點也操作壹遍，保持同步，目的在渲染被高優先級的任務打斷後，再次以current節點為原型新建workInProgress節點時，不會丟失之前尚未處理的update。..處理階段..循環處理上壹步整理好的更新隊列。這裏有兩個重點：...本次更新是否處理update取決於它的優先級（update.lane）和渲染優先級（renderLanes）。..本次更新的計算結果基於baseState。...優先級不足..優先級不足的update會被跳過，它除了跳過之外，還做了三件事：...將被跳過的update放到firstBaseUpdate 和 lastBaseUpdate組成的鏈表中，（就是baseUpdate），等待下次處理低優先級更新的時候再處理。..記錄baseState，此時的baseState為該低優先級update之前所有已被處理的更新的結果，並且只在第壹次跳過時記錄，因為低優先級任務重做時，要從第壹個被跳過的更新開始處理。..將被跳過的update的優先級記錄下來，更新過程即將結束後放到workInProgress.lanes中，這點是調度得以再次發起，進而重做低優先級任務的關鍵。.關於第二點，ReactUpdateQueue.js文件頭部的註釋做了解釋，為了便於理解，我再解釋壹下。...第壹次更新的baseState 是空字符串，更新隊列如下，字母表示state，數字表示優先級。優先級是1 > 2的 A1 - B1 - C2 - D1 - E2  第壹次的渲染優先級（renderLanes）為 1，Updates是本次會被處理的隊列: Base state: '' Updates: [A1, B1, D1]      <- 第壹個被跳過的update為C2，此時的baseUpdate隊列為[C2, D1, E2]，                               它之前所有被處理的update的結果是AB。此時記錄下baseState = 'AB'                               註意！再次跳過低優先級的update(E2)時，則不會記錄baseState                                Result state: 'ABD'--------------------------------------------------------------------------------------------------   第二次的渲染優先級（renderLanes）為 2，Updates是本次會被處理的隊列: Base state: 'AB'           <- 再次發起調度時，取出上次更新遺留的baseUpdate隊列，基於baseState                               計算結果。                                Updates: [C2, D1, E2] Result state: 'ABCDE'..優先級足夠..如果某個update優先級足夠，主要是兩件事：...判斷若baseUpdate隊列不為空（之前有被跳過的update），則將現在這個update放入baseUpdate隊列。..處理更新，計算新狀態。.將優先級足夠的update放入baseUpdate這壹點可以和上邊低優先級update入隊baseUpdate結合起來看。這實際上意味著壹旦有update被跳過，就以它為起點，將後邊直到最後的update無論優先級如何都截取下來。再用上邊的例子來說明壹下。...A1 - B2 - C1 - D2B2被跳過，baseUpdate隊列為B2 - C1 - D2..這樣做是為了保證最終全部更新完成的結果和用戶行為觸發的那些更新全部完成的預期結果保持壹致。比如，A1和C1雖然在第壹次被優先執行，展現的結果為AC，但這只是為了及時響應用戶交互產生的臨時結果，實際上C1的結果需要依賴B2計算結果，當第二次render時，依據B2的前序update的處理結果（baseState為A）開始處理B2 - C1 - D2隊列，最終的結果是ABCD。在提供的.高優先級任務插隊.的例子中，可以證明這壹點。..變化過程為 0 -> 2 -> 3，生命周期將state設置為1(任務A2)，點擊事件將state + 2(任務A1)，正常情況下A2正常調度，但是未render完成，此時A1插隊，更新隊列A2 - A1，為了優先響應高優先級的更新，跳過A2先計算A1，數字由0變為2，baseUpdate為A2 - A1，baseState為0。然後再重做低優先級任務。處理baseUpdate A2 - A1，以baseState（0）為基礎進行計算，最後結果是3。...完成階段..主要是做壹些賦值和優先級標記的工作。...賦值updateQueue.baseState。若此次render沒有更新被跳過，那麽賦值為新計算的state，否則賦值為第壹個被跳過的更新之前的update。..賦值updateQueue 的 firstBaseUpdate 和 lastBaseUpdate，也就是如果本次有更新被跳過，則將被截取的隊列賦值給updateQueue的baseUpdate鏈表。..更新workInProgress節點的lanes。更新策略為如果沒有優先級被跳過，則意味著本次將update都處理完了，lanes清空。否則將低優先級update的優先級放入lanes。之前說過，.此處是再發起壹次調度重做低優先級任務的關鍵。..更新workInProgress節點上的memoizedState。...源碼實現..上面基本把處理更新的所有過程敘述了壹遍，現在讓我們看壹下源碼實現。這部分的代碼在.processUpdateQueue.函數中，它裏面涉及到了大量的鏈表操作，代碼比較多，.我們先來看壹下它的結構，我標註出了那三個階段。..function processUpdateQueue<State>(workInProgress: Fiber, props: any, instance: any, renderLanes: Lanes,): void {   // 準備階段   const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);   let firstBaseUpdate = queue.firstBaseUpdate;   let lastBaseUpdate = queue.lastBaseUpdate;   let pendingQueue = queue.shared.pending;   if (pendingQueue !== null) { /* ... */ }      if (firstBaseUpdate !== null) { // 處理階段     do { ... } while (true);          // 完成階段     if (newLastBaseUpdate === null) {        newBaseState = newState;     }     queue.baseState = ((newBaseState: any): State);     queue.firstBaseUpdate = newFirstBaseUpdate;     queue.lastBaseUpdate = newLastBaseUpdate;     markSkippedUpdateLanes(newLanes);     workInProgress.lanes = newLanes;     workInProgress.memoizedState = newState;   }}..對於上面的概念與源碼的主體結構了解之後，放出完整代碼，但刪除了無關部分，我添加了註釋，對照著那三個過程來看會更有助於理解，否則單看鏈表操作還是有些復雜。..function processUpdateQueue<State>( workInProgress: Fiber, props: any, instance: any, renderLanes: Lanes,): void { // 準備階段---------------------------------------- // 從workInProgress節點上取出updateQueue // 以下代碼中的queue就是updateQueue const queue: UpdateQueue<State> = (workInProgress.updateQueue: any); // 取出queue上的baseUpdate隊列（下面稱遺留的隊列），然後 // 準備接入本次新產生的更新隊列（下面稱新隊列） let firstBaseUpdate = queue.firstBaseUpdate; let lastBaseUpdate = queue.lastBaseUpdate; // 取出新隊列 let pendingQueue = queue.shared.pending; // 下面的操作，實際上就是將新隊列連接到上次遺留的隊列中。 if (pendingQueue !== null) { queue.shared.pending = null; // 取到新隊列 const lastPendingUpdate = pendingQueue; const firstPendingUpdate = lastPendingUpdate.next; // 將遺留的隊列最後壹個元素指向null，實現斷開環狀鏈表 // 然後在尾部接入新隊列 lastPendingUpdate.next = null; if (lastBaseUpdate === null) {   firstBaseUpdate = firstPendingUpdate; } else {   // 將遺留的隊列中最後壹個update的next指向新隊列第壹個update   // 完成接入   lastBaseUpdate.next = firstPendingUpdate; } // 修改遺留隊列的尾部為新隊列的尾部   lastBaseUpdate = lastPendingUpdate;   // 用同樣的方式更新current上的firstBaseUpdate 和   // lastBaseUpdate（baseUpdate隊列）。   // 這樣做相當於將本次合並完成的隊列作為baseUpdate隊列備份到current節   // 點上，因為如果本次的渲染被打斷，那麽下次再重新執行任務的時候，workInProgress節點復制   // 自current節點，它上面的baseUpdate隊列會保有這次的update，保證update不丟失。   const current = workInProgress.alternate;   if (current !== null) {   // This is always non-null on a ClassComponent or HostRoot     const currentQueue:UpdateQueue<State> = (current.updateQueue: any);     const currentLastBaseUpdate = currentQueue.lastBaseUpdate;     if (currentLastBaseUpdate !== lastBaseUpdate) {       if (currentLastBaseUpdate === null) {         currentQueue.firstBaseUpdate = firstPendingUpdate;       } else {         currentLastBaseUpdate.next = firstPendingUpdate;       }       currentQueue.lastBaseUpdate = lastPendingUpdate;     }   } } // 至此，新隊列已經合並到遺留隊列上，firstBaseUpdate作為 // 這個新合並的隊列，會被循環處理 // 處理階段------------------------------------- if (firstBaseUpdate !== null) { // 取到baseState   let newState = queue.baseState;   // 聲明newLanes，它會作為本輪更新處理完成的   // 優先級，最終標記到WIP節點上   let newLanes = NoLanes;   // 聲明newBaseState，註意接下來它被賦值的時機，還有前置條件：   // 1. 當有優先級被跳過，newBaseState賦值為newState，   // 也就是queue.baseState   // 2. 當都處理完成後沒有優先級被跳過，newBaseState賦值為   // 本輪新計算的state，最後更新到queue.baseState上   let newBaseState = null;   // 使用newFirstBaseUpdate 和 newLastBaseUpdate // 來表示本次更新產生的的baseUpdate隊列，目的是截取現有隊列中   // 第壹個被跳過的低優先級update到最後的所有update，最後會被更新到   // updateQueue的firstBaseUpdate 和 lastBaseUpdate上   // 作為下次渲染的遺留隊列（baseUpdate）   let newFirstBaseUpdate = null;   let newLastBaseUpdate = null;   // 從頭開始循環   let update = firstBaseUpdate;   do {     const updateLane = update.lane;     const updateEventTime = update.eventTime;          // isSubsetOfLanes函數的意義是，判斷當前更新的優先級（updateLane）     // 是否在渲染優先級（renderLanes）中如果不在，那麽就說明優先級不足     if (!isSubsetOfLanes(renderLanes, updateLane)) {       const clone: Update<State> = {       eventTime: updateEventTime,       lane: updateLane,       suspenseConfig: update.suspenseConfig,       tag: update.tag,       payload: update.payload,       callback: update.callback,       next: null,     };          // 優先級不足，將update添加到本次的baseUpdate隊列中     if (newLastBaseUpdate === null) {        newFirstBaseUpdate = newLastBaseUpdate = clone;        // newBaseState 更新為前壹個 update 任務的結果，下壹輪        // 持有新優先級的渲染過程處理更新隊列時，將會以它為基礎進行計算。        newBaseState = newState;     } else {       // 如果baseUpdate隊列中已經有了update，那麽將當前的update       // 追加到隊列尾部       newLastBaseUpdate = newLastBaseUpdate.next = clone;     }     /* *      * newLanes會在最後被賦值到workInProgress.lanes上，而它又最終      * 會被收集到root.pendingLanes。      *  再次更新時會從root上的pendingLanes中找出渲染優先級（renderLanes），      * renderLanes含有本次跳過的優先級，再次進入processUpdateQueue時，      * update的優先級符合要求，被更新掉，低優先級任務因此被重做      * */      newLanes = mergeLanes(newLanes, updateLane); } else {   if (newLastBaseUpdate !== null) {     // 進到這個判斷說明現在處理的這個update在優先級不足的update之後，     // 原因有二：     // 第壹，優先級足夠；     // 第二，newLastBaseUpdate不為null說明已經有優先級不足的update了     // 然後將這個高優先級放入本次的baseUpdate，實現之前提到的從updateQueue中     // 截取低優先級update到最後壹個update     const clone: Update<State> = {        eventTime: updateEventTime,        lane: NoLane, 	    suspenseConfig: update.suspenseConfig, 		tag: update.tag, 		payload: update.payload, 		callback: update.callback, 		next: null,   };   newLastBaseUpdate = newLastBaseUpdate.next = clone; } markRenderEventTimeAndConfig(updateEventTime, update.suspenseConfig);  // 處理更新，計算出新結果 newState = getStateFromUpdate( workInProgress, queue, update, newState, props, instance, ); const callback = update.callback;  // 這裏的callback是setState的第二個參數，屬於副作用， // 會被放入queue的副作用隊列裏 if (callback !== null) {     workInProgress.effectTag |= Callback;     const effects = queue.effects;     if (effects === null) {         queue.effects = [update];     } else {        effects.push(update);     }   } } // 移動指針實現遍歷 update = update.next;  if (update === null) {   // 已有的隊列處理完了，檢查壹下有沒有新進來的，有的話   // 接在已有隊列後邊繼續處理   pendingQueue = queue.shared.pending;   if (pendingQueue === null) {     // 如果沒有等待處理的update，那麽跳出循環     break;   } else {     // 如果此時又有了新的update進來，那麽將它接入到之前合並好的隊列中     const lastPendingUpdate = pendingQueue;     const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);     lastPendingUpdate.next = null;     update = firstPendingUpdate;     queue.lastBaseUpdate = lastPendingUpdate;     queue.shared.pending = null;     }  }} while (true);   // 如果沒有低優先級的更新，那麽新的newBaseState就被賦值為   // 剛剛計算出來的state   if (newLastBaseUpdate === null) {    newBaseState = newState;   }   // 完成階段------------------------------------   queue.baseState = ((newBaseState: any): State);   queue.firstBaseUpdate = newFirstBaseUpdate;   queue.lastBaseUpdate = newLastBaseUpdate; markSkippedUpdateLanes(newLanes);   workInProgress.lanes = newLanes; workInProgress.memoizedState = newState;   } }...hooks中useReducer處理更新計算狀態的邏輯與此處基本壹樣。...總結..經過上面的梳理，可以看出來整個對更新的處理都是圍繞優先級。整個processUpdateQueue函數要實現的目的是處理更新，但要保證更新按照優先級被處理的同時，不亂陣腳，這是因為它遵循壹套固定的規則：優先級被跳過後，記住此時的狀態和此優先級之後的更新隊列，並將隊列備份到current節點，這對於update對象按次序、完整地被處理至關重要，也保證了最終呈現的處理結果和用戶的行為觸發的交互的結果保持壹致。. .                                                    ",323
https://ithelp.ithome.com.tw/articles/10255249,【課程推薦】2021/3/6~3/7 Angular前端開發框架實戰,,2021-01-25 09:57:09,,"                                                            .課程目標.‧ 了解Angular前端開發框架與其優勢.‧ 學會有效率的利用Angular開發前端網頁應用程式.‧ 掌握開發Angular的重要觀念與開發技巧..詳細資訊請參考課程網址：.https://www.iiiedu.org.tw/ANGU..課程大綱.1.簡介Angular開發框架.‧ 認識Angular歷史演進.‧ 認識Angular的優點及特色.2.TypeScript以及ES6基礎概念.‧ let與const.‧ type annotation.‧ template literal.‧ for of loop.‧ arrow function.‧ spread operator.‧ class.‧ interface.‧ module import/export.3.Angular開發環境.‧ 認識Node.js及npm套件管理工具.‧ 認識Visual Studio Code編輯器.4.Angular CLI建構器.‧ 基礎概念.‧ ng指令介紹.‧ 安裝Angular CLI.‧ 建立新專案.5.Angular元件.‧ 基礎概念.‧ 顯示資料.‧ 生命週期鉤子.‧ 屬性綁定,事件綁定,雙向綁定.‧ 屬性型指令,結構型指令.‧ 元件樣式,建立子元件,元件間傳遞資料.6.Angular管道.‧ 基礎概念.‧ 內建管道元件.‧ 自定義管道元件.7.Angular表單.‧ 基礎概念.‧ 建立表單.‧ 表單驗證.‧ 提交表單.8.Angular模組.‧ NgModule簡介.‧ NgModule metadata.‧ NgModule和元件.‧ NgModule和JS模組.‧ 內建常用函式庫.9.Angular路由.‧ 單一頁面應用(SPA)基礎概念.‧ 建立及設定路由.‧ Router outlet.‧ Router link.‧ Router paremeters.‧ 應用內導航.10.Angular服務及HttpClient.‧ 服務相依性注入基礎概念.‧ 認識Observable與RxJS.‧ 建立服務元件.‧ 透過HttpClient來與伺服器做溝通..先備知識.‧ 了解基礎HTML / CSS / JavaScript 語法.‧ 具有基礎的程式設計概念(寫過任何一種程式語言即可)..課程對象.Web開發人員 / 網頁設計師 / 網頁前端工程師. .                                                    ",273
https://ithelp.ithome.com.tw/articles/10255248,封包檢查意外發現某Chrome 擴充元件疑似被植入間諜程式碼,,2021-01-25 12:35:16,,                                                            .各位先進大家好，這是小弟在IT邦幫忙的首PO，由於上一份工作跟中國業務交流較深所以以往都是在中國的安全論壇(T00ls等等)發文交流。小弟是學店本科系畢業，曾任全端工程師(網頁前後端爬蟲自動化資安檢測滲透測試兼MIS)後來專做資安，比較擅長Web端的黑白盒滲透測試、紅隊演練、封包分析等等，以下是本文內容還請各位前輩指教。...最近可能是太過神經質，常覺得Google搜尋卡卡的，三不五時不是圈圈轉很久，就是直接給你無回應。...秉持著檢查一下也好的精神，決定檢查一下瀏覽器Google搜尋的所有封包看一下是不是哪個包Timeout還是其他問題，由於平常做封包檢測只有把Burp Suite(使用代理做封包攔截查看的工具)的代理伺服器掛在Firefox上，所以使用擴充元件Proxy SwitchyOmega讓Chrome或Egde也可以走代理伺服器。...掛上Burp代理就開始隨便搜尋，看一下有沒有哪邊有異常，先用Google搜尋關鍵字:ABC，看一下有沒有可疑的封包，一搜尋封包紀錄就有40幾個，包含了google搜尋本身、搜尋結果預覽、擴充元件封包等等...，不得不說google對於使用者的各種搜尋紀錄還蒐集的真詳細..!...扣除了熟悉的google註冊的域名，還有擴充元件產生的，發現了兩個奇怪的域名:.us.cutly.de.xf.gdprvalidate.de.內容分別是:....到這邊開始覺得有點怪怪的，看起來不是很正常的域名，也不是送給我認識的擴充元件，先是發起GET請求到.https://us.cutly.de/universal_search/config/config.json.這個連結，裡面會304跳轉到一大包JSON資料:...目測很明顯是把google搜尋的目標跟結果透過GET請求送到xf.gdprvalidate.de這個域名，讓我們把他GET請求的內容編碼回來確認看看:...欸這老兄怎麼偷偷記錄我的UA、搜尋紀錄、搜尋結果、視窗解析度，還有一些可疑參數名memberhash等等..。小弟我是不敢登入，搞不好還會給我記錄更不該紀錄的東西!..到這邊判斷應該是某個擴充元件搞的鬼，我們到擴充元件面板去把所有擴充關掉，再一個個打開重新執行搜尋動作查看封包看看是誰在搞鬼!...結果確認是打開WhatRuns這個擴充元件，會把google搜尋紀錄額外的送到xf.gdprvalidate.de這個域名!.(介紹一下WhatRuns這個擴充元件是用於開啟某網站頁面時，會依據特徵自動分析網站前後端使用的語言、伺服器、資料庫、前後端框架、額外引入的JS包的工具，Chrome商店上顯示有200000+ 位使用者，評價為4顆星以上。)..由於擴充元件都是基於Javascript開發，下載到本地資料夾，開啟瀏覽器時再到每個頁面載入，我們直接去找到該擴充元件的原始碼去看看到底是在做甚麼事情!.路徑會是在:..Micosoft Edge.C:\Users\你的使用者名稱\AppData\Local\Microsoft\Edge\User Data\Default\Extensions\擴充元件識別碼\版本號.Google Chrome.C:\Users\你的使用者名稱\AppData\Local\Google\Chrome\User\Data\Default\Extensions\擴充元件識別碼\版本號..擴充元件識別碼:....裡面的js檔案分別是放在js和universal_search資料夾，其中js資料夾裡面的Javascript Code都很正常universal_search裡面的則都有混淆過，在universal_search資料夾裡面的background.bundle.js發現了發請求到us.cutly.de域名的原始碼:...這邊其實看到混淆過的JS就覺得可能有問題了，一般來說擴充元件由於所有使用者都可以訪問其原始碼，基於讓使用者信任很少會將其混淆讓人不易審查。這邊也確實讓我沒有辦法檢查的很徹底，不過目前是沒有發現有更敏感的前端操作(鍵盤紀錄、螢幕截圖、偷取cookie等等..)。..接下來我們把發現的us.cutly.de和xf.gdprvalidate.de這兩個域名拿去做信息蒐集，Whois 上面沒有任何個人或是公司行號的資料，google結果則回報許多筆關於xf.gdprvalidate.de這個域名的資料，發現該域名已經被AVG以及AVAST兩大防毒廠商列為黑名單，hybrid-analysis也有回報但是沒有詳細的說明:..https://forum.avast.com/index.php?topic=241187.0..https://support.avg.com/answers?id=9065p000000PlY2AAK..https://hybrid-analysis.com/sample/63ca29859bf989cdce79c7a5d3f2d26ee6e4a5d1ae1190b3c69d1ab3c468c5ad..reddit上則是有人回報說，訪問別的網站會被惡意跳轉至xf.gdprvalidate.de..https://www.reddit.com/r/chrome/comments/ilkblp/my_links_in_google_searches_change_when_i_click/..有多筆留言回報是在Downloader for Instagram這個擴充元件上，有發現該間諜程式碼，且問題的回報紀錄都是在4個月以內，至於WhatRuns上則沒有看到其他人回報。..調查分析工作到這邊就告一段落了，筆者後來有寄E-Mail給WhatRuns的開發團隊詢問us.cutly.de和xf.gdprvalidate.de這兩個域名是否為該團隊所有，不過目前為止尚未收到任何回應。..雖然目前並沒有100%確認，不過筆者懷疑是有黑帽駭客團隊對使用者有一定數量的擴充元件廠商進行滲透，並加入一些偵查使用者隱私的功能，且us.cutly.de該域名的擁有者可以不透過擴充元件更新，隨時新增各種惡意Javascript程式碼(鍵盤紀錄、螢幕截圖、偷取cookie、讓20W+所有使用者發起DDOS攻擊、讓所有使用者進行瀏覽器挖礦等等..)，若有使用者正在使用Downloader for Instagram或是WhatRuns這兩個擴充元件，筆者建議先行移除，等開發團隊有正式的回覆確認之後再考慮是否重新安裝。..這篇文章就到此告一段落，謝謝各位前輩的閱讀，若有謬誤之處請儘管提出以利筆者進行修正，再次感謝!. .                                                    ,2207
https://ithelp.ithome.com.tw/articles/10255251,身份證明和註冊(identity proofing and enrollment),,2021-01-25 11:54:31,,                                                            .NIST SP 800-63A提供了這樣做的指南。..-身份證明用戶之旅（來源：NIST SP 800-63A）..參考..	.身份管理..	.建立身份.資料來源： .Wentz Wu QOTD-20210110. .                                                    ,241
https://ithelp.ithome.com.tw/articles/10255263,SEO優化指南：2021適合初學者的網站最佳化策略,,2021-01-26 13:09:15,,                                                            ..有在經營.開店平台.、品牌官網或是網站的人，應該都有聽說過SEO，不過可能略知一二，或是對於SEO的涵義及如何運行卻不太清楚。只知道要曝光網站或是網站的流量變低時，就要花錢下廣告、購買關鍵字，但效益可能不如預期，或是不見起色，如果您正有類似的狀況，那就要開始了解SEO優化了。經營SEO優化，雖然需要耗費較長的時間及較大的心力，不過一旦有了成果，就能降低廣告預算，也能創造自然流量。..SEO代表搜索引擎最佳化，意思是透過了解搜尋引擎的演算法，讓自己的網站提升質量，創造自然流量、曝光度和搜尋排名。今天就要帶SEO新手從了解SEO的意義及運行模式開始，以及後續該如操作SEO優化，一步一步踏入SEO的領域，減少繞路的時間和冤忘錢。文章的最後也會談到是否需要找.SEO公司.協助，以及如要進一步合作，要留意哪些注意事項。..延伸閱讀: .SEO優化. .                                                    ,183
https://ithelp.ithome.com.tw/articles/10255261,"推薦一套非常好用的軟體：EzTooL 這是一套""進銷存"" 或 ""ERP"" 或 ""門市POS"" 都是",,2021-01-26 11:12:01,,"                                                            .推薦一套非常好用的軟體：EzTooL 這是一套""進銷存"" 或 ""ERP"" 或 ""門市POS"" 都是..我大約用了一年多了吧..我個人都是使用免費的版本...雖只有進銷存部份，但真的很符合我使....注意喔:免費版是並沒有財務會計部份喔..有需要財務會計部份需升級購買喔...eztool 最大特色就是不需要看說明書就能上手簡單..又有說明教學影片.再來就是系統極穩。就算換電腦也ok的....如果以單看免費、進銷存、安裝簡單的話，我個人是覺得還不錯用這是一個很好用的軟體..好學好用又易懂..免費版本的有提問也一定必回覆...服務很好..又有影片教學..真的很讚的軟體..大推...還有一個超好超讚的功能就是可以每天自動備份軟體資料備份檔...而且也可選擇存在電腦指定位置或是自動備份email並且並傳送到自己的信箱裡..真的超感人又感動的功能...這樣就算電腦臨時故障..在重灌或買新電腦都何以直接備份還原.......很感謝貴公司的用心.謝謝您~..用了一段時間了...非常好用..雖免費但一樣回覆很快..謝謝你們..大力推薦..EzTooL官網: .http://www.eztool.com.tw. .                                                    .                                            .要打廣告就打廣告.不必費心創建多個帳號.多此一舉..至於在這裡打廣告的效果好不好.你可以去問帆軟(finereport)的人員.再決定是否要繼續打下去.                                    ",203
https://ithelp.ithome.com.tw/articles/10189788,CPU反裝與散熱器外露,,2021-01-26 14:14:39,,                                                            .記得小大一在微積分課，老師講到拓樸學的時候說到了一個故事，有人對囚犯說，你被關在監獄裡面，囚犯卻對這個人說，其實是你被關在監獄外面。裡面外面是相對的概念，正面反面也是相對的概念，反向安裝CPU的主機板，CPU其實也跟其他元件說，記憶體以及界面卡其實也你們才都在背面了。...由於CPU反向主機板在是市面上並不常見，充其量也是一些小型的SoC藉由安裝在主機板背面，以橫躺直接緊貼機殼底部，藉此獲得較強的被動散熱效能，比如一些機上盒可能以此設計。..第一種非典型改裝概念，我們直接採用了擬似裸測板的架構，將主機板安裝在一塊底板上，處理器散熱片朝下置放，外廓部分只安裝了介面卡擋板架。並直接將顯示卡、10Ge NIC、影像擷取卡等PCI-E和PCI的介面卡安插其上，好處就是在測試環境中可以快速的更換零組件，並且沒有機箱內積熱的情況，缺點想當然爾就是容易積附灰塵。..第二種非典型改裝概念，我們選擇了地板上在CPU下方有開孔的曜越 Core P5 機殼，直接將CPU散熱片伸展出機殼背面。但須先將硬碟支架卸除。在這個安裝實例中，由於我們必須將處理片外露，所以無法選擇，顯示卡垂直安裝的方式，所以延長排線也就無用武之地了。..另外原來的機箱後蓋設計，只能容納一顆傳統硬碟的厚度，此時我們想到一個非常容易上手而且所費不柴的改裝方式，就是直接用銅柱加寬了後蓋與主機板的距離，一個便當不夠吃可以吃兩個，一根銅柱不夠高可以疊加兩根、三根。這樣就可以容納入CPU散熱片，四周邊緣的空隙，可以選擇用壓克力或者保麗龍填充，或者安裝小型風扇加強散熱，甚至直接留白亦可。...元得電子 Q270 ENCTEC REV.SERIES 主機板、曜越 Core P5 機殼、ENCTEC 特製巨型熱管散熱片、美光DDR4-2400記憶體、宇惟SATA SSD、搭配振華LEADEX III SF-550F14HG金牌電源供應器，對付R9-380+i7 7700已經是游刃有餘。LEADEX III 有O/I/II三速調控可以直接將音量降到最低程度。...在CPU FAN與SYS FAN決如的情況下，在BIOS畫面，主機板溫度只有攝氏40度，CPU也只有微微的攝氏47度，相當於卸側板時的溫度表現。.. .                                                    ,191
https://ithelp.ithome.com.tw/articles/10255265,升級AD樹系及網域等級,,2021-01-26 13:53:08,,                                                            .各位先進好.如果網域中所有DC作業系統皆為Windows Server 2012  R2 standard版本，.就可以直接將AD樹系及網域等級提昇為Windows Server 2012 R2，還是需先升級.為Windows Server 2008 ?升級完所有網域DC需要重新開機嗎?另需作哪些準備.及應注意事項為何?懇請各位先進提供相關升級經驗給小弟參考，謝謝。. .                                                    .                                            .Windows Server 2008 MS已經不支援了，建議升級至Windows Server 2012 R2以上，你其他的問題應該就順勢解決了.                                    ,179
https://ithelp.ithome.com.tw/articles/10255264,CIA作為安全目標(CIA as security objectives),,2021-01-26 14:32:12,,                                                            .根據FISMA的說法，“完整性意味著防止不當的信息修改或破壞，並且包括確保信息的不可否認性和真實性。”..	“訪問令牌是否已更改？” 關於數據.完整性.。..	“網站是訪問令牌的真實來源嗎”是關於.真實性.的。..	“網站是否在訪問令牌上簽名？” 關於.不可否認.。..	“傳輸中的訪問令牌丟失了”是關於數據的.可用性.。..資料來源： .Wentz Wu QOTD-20210111. .                                                    ,139
https://ithelp.ithome.com.tw/articles/10255268,# iOS APP 開發 OC 第二十一天，ARC 下的循環引用,,2021-01-26 17:35:52,,                                                            .tags: .OC 30 day...兩個對象..if(1){Person *p1 = [Person new];Book *b1 = [Book new];}..這個時候記憶體是這樣分配的。...但是如果這兩個物件互相引用呢？..if(1){Person *p1 = [Person new];Book *b1 = [Book new];p1.book = b1;b1.owner = p1;}...這個時候，將兩個物件釋放掉..發生什麼事，Person 指著Book。Book 指著Person，誰都死不了。這個時候怎麼辦？..使用弱指針..當兩個對象的指針被釋放掉時：..此時Person 沒有強指針指著他，因此他會被釋放。..此時，Book對象也沒有強指針指著他，因此他也會被釋放掉。..總結..在ARC機制下，當兩個物件相互引用時，如果兩邊都使用strong 那麼就會不知道由誰先釋放。導致retain cycle。.改成weak 就知道從 weak 先釋放。. .                                                    ,126
https://ithelp.ithome.com.tw/articles/10189767,進銷存 門市POS,,2021-01-26 20:13:33,,"                                                            .本身是電腦資訊的門市維修.總有一些進銷存盤查及會計報表.想找些好用及免費的試用.間接地才接觸到 ""EzTooL整合式進銷存"".當然好友簡單易懂的 ""門市 POS""..最棒的是使用者有使用上的操作問題.都能從開頁面中的影片圖示(紅色的眶選處).得到線上教學及操作步驟..真的是非常用心的一家軟體.加入會員後還有雲端資料庫備份.永不怕地端的電腦掛點連同資料庫都消失. .                                                    ",160
https://ithelp.ithome.com.tw/articles/10255275,[Aras筆記] 從Excel快速貼上受影響物件並建立變更單,,2021-01-27 03:18:28,,"                                                            .###本文章內容皆由我本人開發撰寫與分享..在變更單建立時，經常會花時間編輯受影響物件.經常是為了從Excel檔案填寫到PLM系統上.此快速貼上並匯入變更單就因此而生..準備如下.1.自訂一個表單.2.在表單上的Import新增Click程式.3.在Action新增開啟表單程式..如下示意操作.......1.新增一份表單，並設計出適合的介面，拉出一個按鈕且新增click程式，下面程式碼可參考自己的系統現況去調整...var inn = new Innovator();var prt = typeof(parent.document.item) == ""object"" ? parent.document : parent.parent;var tmpThisItem = typeof(parent.document.thisItem) == ""object"" ? parent.document.thisItem : parent.thisItem;var topWnd = aras.getMostTopWindowWithAras(window);topWnd = topWnd.main || topWnd;//console.log(topWnd.dialogArguments.cur_item);var theItem = topWnd.cur_item;var changesItemtype= theItem.getAttribute(""type"","""");//取得要匯入的文字框var textarea_import = document.getElementsByName(""txtBOM"")[1];var textarea_log = document.getElementsByName(""txtLog"")[1];if(textarea_import.value==="""" || textarea_import.value===undefined){    aras.AlertError(""Parts List is null."");}var logs = """";//解析每一行的編號var rows = textarea_import.value.split(""\n"");for(var i=0;i<rows.length;i++){    var part_num = rows[i];    if(part_num==="""") continue;    //若為D_開頭編碼為Document或CAD    if(part_num.substring(0,1)=='D'){        var partItem = inn.newItem(""Document"",""get"");            partItem.setProperty(""item_number"",part_num);            partItem.setProperty(""is_current"",""1"");            partItem = partItem.apply();        if(partItem.isError()){            partItem = inn.newItem(""CAD"",""get"");            partItem.setProperty(""item_number"",part_num);            partItem.setProperty(""is_current"",""1"");            partItem = partItem.apply();        }        if(partItem.isError()==false){            //若是草稿就新增料號            if(partItem.getProperty(""state"","""")===""Preliminary""){                var changeItem = inn.newItem(""Affected Item"",""add"");                    changeItem.setProperty(""action"",""Add"");                    changeItem.setProperty(""new_item_id"",partItem.getID());                                    var affectItem = inn.newItem(changesItemtype+"" Affected Item"",""add"");                    affectItem.setProperty(""source_id"",theItem.getID());                    affectItem.setPropertyItem(""related_id"",changeItem);                    affectItem = affectItem.apply();                    if(affectItem.isError()){                        logs+=part_num +"" Error : ""+affectItem.getErrorString()+""\n"";                    }else{                        logs+=part_num +"" OK.\n"";                    }            }else{                //反之則變更                var changeItem = inn.newItem(""Affected Item"",""add"");                    changeItem.setProperty(""action"",""Change"");                    changeItem.setProperty(""affected_id"",partItem.getID());                var affectItem = inn.newItem(changesItemtype+"" Affected Item"",""add"");                    affectItem.setProperty(""source_id"",theItem.getID());                    affectItem.setPropertyItem(""related_id"",changeItem);                    affectItem = affectItem.apply();                    if(affectItem.isError()){                        logs+=part_num +"" Error : ""+affectItem.getErrorString()+""\n"";                    }else{                        logs+=part_num +"" OK.\n"";                    }            }        }else{            logs+=part_num +"" Error : ""+partItem.getErrorString()+""\n"";        }    }else{        //搜尋該料號        var partItem = inn.newItem(""Part"",""get"");            partItem.setProperty(""item_number"",part_num);            partItem.setProperty(""is_current"",""1"");            partItem = partItem.apply();        if(partItem.isError()){            logs+=part_num +"" Error : ""+partItem.getErrorString()+""\n"";        }else{            if(partItem.getProperty(""state"","""")===""Preliminary""){                var changeItem = inn.newItem(""Affected Item"",""add"");                    changeItem.setProperty(""action"",""Add"");                    changeItem.setProperty(""new_item_id"",partItem.getID());                                    var affectItem = inn.newItem(changesItemtype+"" Affected Item"",""add"");                    affectItem.setProperty(""source_id"",theItem.getID());                    affectItem.setPropertyItem(""related_id"",changeItem);                    affectItem = affectItem.apply();                    if(affectItem.isError()){                        logs+=part_num +"" Error : ""+affectItem.getErrorString()+""\n"";                    }else{                        logs+=part_num +"" OK.\n"";                    }            }else{                var changeItem = inn.newItem(""Affected Item"",""add"");                    changeItem.setProperty(""action"",""Change"");                    changeItem.setProperty(""affected_id"",partItem.getID());                var affectItem = inn.newItem(changesItemtype+"" Affected Item"",""add"");                    affectItem.setProperty(""source_id"",theItem.getID());                    affectItem.setPropertyItem(""related_id"",changeItem);                    affectItem = affectItem.apply();                    if(affectItem.isError()){                        logs+=part_num +"" Error : ""+affectItem.getErrorString()+""\n"";                    }else{                        logs+=part_num +"" OK.\n"";                    }            }        }    }}textarea_log.value = logs;....打開匯入視窗Action程式.....var prt = typeof(parent.document.item) == ""object"" ? parent.document : parent.parent;var tmpThisItem = typeof(parent.document.thisItem) == ""object"" ? parent.document.thisItem : parent.thisItem;if(tmpThisItem.isNew()){    aras.AlertError(""Please save the item. 請先存檔並解鎖後再執行。"");}if(tmpThisItem.isLocked()===1 || tmpThisItem.isLocked()===2){    aras.AlertError(""The item is Lock. 物件已上鎖中"");    return ;}if(tmpThisItem.getProperty(""state"","""")===""New""){    var topWnd = aras.getMostTopWindowWithAras(window);    topWnd = topWnd.main || topWnd;    // get form    var formName = ""JPC_ImportChangeData"";    var fetchForm = this.getInnovator().newItem(""Form"",""get"");    fetchForm.setProperty(""name"",formName);    fetchForm = fetchForm.apply(""get"");     // check form for error    if (fetchForm.isError())        return alert(""Can't find a form called "" + formName);    // get form params    var params = {        title: 'Parts Change Import',         formId: fetchForm.getID(),       // put your form's id here        aras: aras,        dialogWidth: 600,                // set width int        dialogHeight: 400,               // set height int        content: 'ShowFormAsADialog.html',        cur_item : tmpThisItem    };    topWnd.cur_item = tmpThisItem;    var callback = function(res) {        //Perform logic using dialog result here        var parentID = document.itemID;        var parentAction = 'edit'; // or 'view'        top.aras.uiReShowItem(parentID,parentID,parentAction,'tab view');        return ;    }    // call form in dialog    topWnd.ArasModules.MaximazableDialog.show(""iframe"", params).promise.then(callback);    return null;}else{    aras.AlertError(""Changes is not Preliminary.此非編輯系統狀態，不能執行。"");}. .                                                    ",141
https://ithelp.ithome.com.tw/articles/10211057,[Aras 筆記] Report報表-多階BOM+替代料R1R2,,2021-01-27 02:49:36,,"                                                            .###注意此文章內容皆由我本人開發撰寫與分享..Github連結.用Report報表產生RD需要的多階BOM表.並且包含R1,R2的顯示方式.首先需要準備.1.一個Report報表設定.2.報表的樣式，此樣式包含可下載Excel.3.查詢的程式碼.4.在Part 物件類型新增此報表..先看結果，如下圖報表欄位有Subsititude會顯示R1主料、R2替代料.....1.先設定一個報表如下圖..2.新增報表的Method(C#)，如1點的jpc_getMutipleBOMLevel..    inn = this.getInnovator();    return main(this);}private string ConvertNumber(string qStr){    Decimal de;    Decimal.TryParse(qStr,System.Globalization.NumberStyles.Any,null,out de);    return de.ToString();}Innovator inn;private Item main(Item thisItem){    Item report = inn.newItem(""Report"",""get"");    report.setProperty(""name"",""JPC Multiple Level BOM"");    report = report.apply();    Item result=inn.newItem();    if(report.isError()==false){        string aml = @""<AML>  <Item type='Part' action='get' select='item_number,name,cn_lifecycle,cn_revision' id='{0}'>    <Relationships>      <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_attrition_rate,cn_bom_note,reference_designator'>        <Relationships>          <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>            <related_id>              <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>              </Item>            </related_id>          </Item>        </Relationships>        <related_id>          <Item type='Part' select='item_number,name,cn_lifecycle,cn_revision,unit'>            <Relationships>              <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_bom_note,cn_attrition_rate,reference_designator'>                <Relationships>                  <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>                    <related_id>                      <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                      </Item>                    </related_id>                  </Item>                </Relationships>                <related_id>                  <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                    <Relationships>                      <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_bom_note,cn_attrition_rate,reference_designator'>                        <Relationships>                          <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>                            <related_id>                              <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                              </Item>                            </related_id>                          </Item>                        </Relationships>                        <related_id>                          <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                            <Relationships>                              <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_attrition_rate,cn_bom_note,reference_designator'>                                <Relationships>                                  <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate,cn_bom_note'>                                    <related_id>                                      <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                                      </Item>                                    </related_id>                                  </Item>                                </Relationships>                                <related_id>                                  <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                                    <Relationships>                                      <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_attrition_rate,cn_bom_note,reference_designator'>                                        <Relationships>                                          <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>                                            <related_id>                                              <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                                              </Item>                                            </related_id>                                          </Item>                                        </Relationships>                                        <related_id>                                          <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                                            <Relationships>                                              <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_attrition_rate,cn_bom_note,reference_designator'>                                                <Relationships>                                                  <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>                                                    <related_id>                                                      <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                                                      </Item>                                                    </related_id>                                                  </Item>                                                </Relationships>                                                <related_id>                                                  <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                                                    <Relationships>                                                      <Item type='Part BOM' select='sort_order,quantity,related_id(item_number,name),cn_attrition_rate,cn_bom_note,reference_designator'>                                                        <Relationships>                                                          <Item action='get' type='BOM Substitute' select='id,related_id,cn_bom_note,cn_sort_order,cn_substitute_quantity,cn_substitute_shrinkrate,cn_substitute_unit,cn_substitute_shrinkrate'>                                                            <related_id>                                                              <Item type='Part' action='get' select='id,item_number,name,cn_lifecycle,cn_revision'>                                                              </Item>                                                            </related_id>                                                          </Item>                                                        </Relationships>                                                        <related_id>                                                          <Item type='Part' select='item_number,name, cn_lifecycle,cn_revision,unit'>                                                          </Item>                                                        </related_id>                                                      </Item>                                                    </Relationships>                                                  </Item>                                                </related_id>                                              </Item>                                            </Relationships>                                          </Item>                                        </related_id>                                      </Item>                                    </Relationships>                                  </Item>                                </related_id>                              </Item>                            </Relationships>                          </Item>                        </related_id>                      </Item>                    </Relationships>                  </Item>                </related_id>              </Item>            </Relationships>          </Item>        </related_id>      </Item>    </Relationships>  </Item></AML>"";        aml = string.Format(aml,thisItem.getID());        //aml = string.Format(aml,""DE00E0D709364DC1A94939866F816C0F"");        Item part = inn.applyAML(aml);        Item bom = part.getItemsByXPath(""//Item[@type='Part BOM']"");        for(int i=0;i<bom.getItemCount();i++){            Item b = bom.getItemByIndex(i);            string qStr = b.getProperty(""quantity"",""0"");            b.setProperty(""quantity"",ConvertNumber(qStr));            qStr = b.getProperty(""cn_attrition_rate"",""0"");            b.setProperty(""cn_attrition_rate"",ConvertNumber(qStr));        }        bom = part.getItemsByXPath(""//Item[@type='BOM Substitute']"");        for(int i=0;i<bom.getItemCount();i++){            Item b = bom.getItemByIndex(i);            string qStr = b.getProperty(""cn_substitute_quantity"",""0"");            b.setProperty(""cn_substitute_quantity"",ConvertNumber(qStr));            qStr = b.getProperty(""cn_substitute_shrinkrate"",""0"");            b.setProperty(""cn_substitute_shrinkrate"",ConvertNumber(qStr));        }        result = part;    }    return result;...3.更新報表的樣式，注意有Export按鈕可下載Excel檔案..<xsl:stylesheet version=""1.0"" xmlns:xsl=""http://www.w3.org/1999/XSL/Transform"" xmlns:msxsl=""urn:schemas-microsoft-com:xslt"" xmlns:aras=""http://www.aras-corp.com"" xmlns:user=""http://mycompany.com/mynamespace"">	<xsl:output method=""html"" omit-xml-declaration=""yes"" standalone=""yes"" indent=""yes""/>	<xsl:template match=""/"">		<html>			<head/>			<style type=""text/css"" userData=""Global"">				.cellSolid {text-align:center;border-top:1px #000000 solid;border-right:1px #000000 solid;border-bottom:1px #000000 solid;border-left:1px #000000 solid;}				.cellSolidTopRight {border-top:1px #000000 solid;border-right:1px #000000 solid;}				.cellSolidTopLeft {border-top:1px #000000 solid;border-left:1px #000000 solid;}				.cellSolidRightBottom {border-right:1px #000000 solid;border-bottom:1px #000000 solid;font-family:helvetica;font-size:8pt;}				.cellSolidBottomLeft {border-bottom:1px #000000 solid;border-left:1px #000000 solid;}				.cellSolidTop {border-top:1px #000000 solid;}				.cellSolidRight {border-right:1px #000000 solid;}				.cellSolidBottom {border-bottom:1px #000000 solid;}				.cellSolidLeft {border-left:1px #000000 solid;}				.cellDashed {border-top:1px #666666 dashed;border-right:1px #666666 dashed;border-bottom:1px #666666 dashed;border-left:1px #666666 dashed;}				.cellDashedTopRight {border-top:1px #666666 dashed;border-right:1px #666666 dashed;}				.cellDashedTopLeft {border-top:1px #666666 dashed;border-left:1px #666666 dashed;}				.cellDashedBottomRight {border-bottom:1px #666666 dashed;border-right:1px #666666 dashed;}				.cellDashedBottomLeft {border-bottom:1px #666666 dashed;border-left:1px #666666 dashed;}				.cellDashedTop {border-top:1px #666666 dashed;}				.cellDashedRight {border-right:1px #666666 dashed;}				.cellDashedBottom {border-bottom:1px #666666 dashed;}				.cellDashedLeft {border-left:1px #666666 dashed;}				.cellHeader {background-color:#CCCCCC;border-top:1px #000000 solid;border-right:1px #000000 solid;border-bottom:1px #000000 solid;padding:2px;text-align:center;text-transform:capitalize;text-align:center;font-family:helvetica;font-weight:bold;font-size:8pt;}				.cellTitle {border-top:1px #000000 solid;border-right:1px #000000 solid;border-left:1px #000000 solid;padding:2px;text-align:center;text-transform:capitalize;text-align:center;font-family:helvetica;font-weight:bold;font-size:8pt;}			</style>			<script>            <![CDATA[                function fnExcelReport()                {                    var tab_text=""<meta http-equiv='content-type' content='application/vnd.ms-excel; charset=UTF-8'/><table border='2px'download='Part'><tr>"";                    var textRange; var j=0;                    tab = document.getElementById('headerTable'); // id of table                    for(j = 0 ; j < tab.rows.length ; j++)                     {                             tab_text=tab_text+tab.rows[j].innerHTML+""</tr>"";                        //tab_text=tab_text+""</tr>"";                    }                    tab_text=tab_text+""</table>"";                    tab_text= tab_text.replace(/<A[^>]*>|<\/A>/g, """");//remove if u want links in your table                    tab_text= tab_text.replace(/<img[^>]*>/gi,""""); // remove if u want images in your table                    tab_text= tab_text.replace(/<input[^>]*>|<\/input>/gi, """"); // reomves input params                    var ua = window.navigator.userAgent;                    var msie = ua.indexOf(""MSIE "");                     if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./))      // If Internet Explorer                    {                        txtArea1.document.open(""txt/html"",""replace"");                        txtArea1.document.write(tab_text);                        txtArea1.document.close();                        txtArea1.focus();                         sa=txtArea1.document.execCommand(""SaveAs"",true,""Part"");                    }                      else                 //other browser not tested on IE 11                        sa = window.open('data:application/vnd.ms-excel,' + encodeURIComponent(tab_text));                      return (sa);                }            ]]>            </script>          					 										<body topmargin=""50"" leftmargin=""50"">												<table border=""0"" cellspacing=""0"" cellpadding=""0"" width=""850"" id=""headerTable"">							<tr valign=""bottom"">								<td colspan=""18"" style=""font-family:helvetica;font-size:15pt;color:#DA1943;padding:2px;"" align=""left"" uniqueID=""ms__id79"">Mutiple Level BOM </td>								<td colspan=""1"" style=""font-family:helvetica;font-size:10pt;padding:2px;"" align=""right"" uniqueID=""ms__id80"">									<button id=""btnExport"" onclick=""fnExcelReport();"">EXPORT</button>								</td>							</tr>							<tr>								<td class=""cellHeader"" colspan=""8"" uniqueID=""ms__id86"" style=""border-left:1px #000000 solid;"">Indenture Level</td>								<td class=""cellHeader"" uniqueID=""ms__id89"">Part Number</td>								<td class=""cellHeader"" uniqueID=""ms__id91"">Name</td>								<td class=""cellHeader"" uniqueID=""ms__id91"">Lifecycle</td>								<td class=""cellHeader"" uniqueID=""ms__id91"">Revision</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">SortOrder</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">Quantity</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">Unit</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">Res</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">Subsititue</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">Shrinkrate</td>								<td class=""cellHeader"" uniqueID=""ms__id88"">BOM Note</td>							</tr>							<xsl:call-template name=""Levels""/>						</table>					</body>				</html>			</xsl:template>			<!-- Find the Part Level and pass as the 'Depth' param to the next template -->			<xsl:template name=""Levels"">				<xsl:for-each select=""//Item[@type='Part']"">					<xsl:apply-templates mode=""PartBOM"" select=""."">						<xsl:with-param name=""Depth"" select=""count(ancestor::Relationships)-count(ancestor::Item[@type='BOM Substitute'])""/>					</xsl:apply-templates>				</xsl:for-each>			</xsl:template>			<xsl:template mode=""PartBOM"" match=""//Item[@type='Part']"">				<xsl:param name=""Depth""/>				<tr>					<xsl:choose>						<xsl:when test=""$Depth = '0'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id92"" align=""center"" style=""border-left:1px #000000 solid;"">								<xsl:value-of select=""$Depth""/>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id93"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id94"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id96"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id196"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id60"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id196"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id60"">								<xsl:text> </xsl:text>							</td>						</xsl:when>						<xsl:when test=""$Depth = '1'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id97"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id98"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id99"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id100"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id101"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>						<xsl:when test=""$Depth = '2'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id102"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id103"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id104"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id105"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id198"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id62"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>						<xsl:when test=""$Depth = '3'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id107"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id108"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id109"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id110"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id111"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id63"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>						<xsl:when test=""$Depth = '4'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id112"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id113"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id114"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id115"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id116"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id64"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>						<xsl:when test=""$Depth = '5'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id201"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id202"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id203"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id204"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id206"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id205"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>                        <xsl:when test=""$Depth = '6'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id201"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id202"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id203"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id204"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id206"">								<xsl:text> </xsl:text>							</td>							                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id205"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>						</xsl:when>                        <xsl:when test=""$Depth = '7'"">							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id201"" style=""border-left:1px #000000 solid;"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id202"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id203"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id204"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id206"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>                            <td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id61"">								<xsl:text> </xsl:text>							</td>							<td class=""cellSolidRightBottom"" width=""20pt"" uniqueID=""ms__id205"" align=""center"">								<xsl:value-of select=""$Depth""/>							</td>						</xsl:when>					</xsl:choose>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" uniqueID=""ms__id28"">						<xsl:value-of select=""item_number""/>						<xsl:if test=""item_number='' or not(item_number)"">							<xsl:text> </xsl:text>						</xsl:if>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" uniqueID=""ms__id27"">						<xsl:value-of select=""name""/>						<xsl:if test=""name='' or not(name)"">							<xsl:text> </xsl:text>						</xsl:if>					</td>					            <td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""center"" uniqueID=""ms__id27"">						<xsl:value-of select=""cn_lifecycle""/>						<xsl:if test=""cn_lifecycle='' or not(cn_lifecycle)"">							<xsl:text> </xsl:text>						</xsl:if>					</td>					            <td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""center"" uniqueID=""ms__id27"">						<xsl:value-of select=""cn_revision""/>						<xsl:if test=""cn_revision='' or not(cn_revision)"">							<xsl:text> </xsl:text>						</xsl:if>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""center"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../cn_sort_order != ''"">								<xsl:value-of select=""../../../../sort_order""/>								<xsl:if test=""../../../../sort_order='' or not(../../../../sort_order)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:otherwise>								<xsl:value-of select=""../../sort_order""/>								<xsl:if test=""../../sort_order='' or not(../../sort_order)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""right"" uniqueID=""ms__id29"">						<xsl:choose>							<xsl:when test=""../../cn_substitute_quantity != '0'"">								<xsl:value-of select=""../../cn_substitute_quantity""/>								<xsl:if test=""../../cn_substitute_quantity='' or not(../../cn_substitute_quantity)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""../../quantity != '0'"">								<xsl:value-of select=""../../quantity""/>								<xsl:if test=""../../quantity='' or not(../../quantity)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""$Depth = '0'"">								<xsl:text>1</xsl:text>							</xsl:when>							<xsl:otherwise>								<xsl:text>0</xsl:text>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""center"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../cn_substitute_unit != ''"">								<xsl:value-of select=""../../cn_substitute_unit""/>								<xsl:if test=""../../cn_substitute_unit='' or not(../../cn_substitute_unit)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:otherwise>								<xsl:value-of select=""unit""/>								<xsl:if test=""unit='' or not(unit)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""left"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../reference_designator != ''"">								<xsl:value-of select=""../../reference_designator""/>								<xsl:if test=""../../reference_designator='' or not(../../reference_designator)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""../../../../reference_designator != ''"">								<xsl:value-of select=""../../../../reference_designator""/>															</xsl:when>							<xsl:otherwise>								<xsl:text> </xsl:text>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""center"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../cn_sort_order != ''"">								<xsl:value-of select=""concat('R',(number(../../cn_sort_order)+1))""/>								<xsl:if test=""../../cn_sort_order='' or not(../../cn_sort_order)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""../../Relationships/Item[@type='BOM Substitute']/cn_sort_order != ''"">								<xsl:text>R1</xsl:text>							</xsl:when>							<xsl:otherwise>								<xsl:text> </xsl:text>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""right"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../cn_substitute_shrinkrate != '0'"">								<xsl:value-of select=""../../cn_substitute_shrinkrate""/>								<xsl:if test=""../../cn_substitute_shrinkrate='' or not(../../cn_substitute_shrinkrate)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""../../cn_attrition_rate != '0'"">								<xsl:value-of select=""../../cn_attrition_rate""/>								<xsl:if test=""../../cn_attrition_rate='' or not(../../cn_attrition_rate)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:otherwise>								<xsl:text>0</xsl:text>							</xsl:otherwise>						</xsl:choose>					</td>					<td class=""cellSolidRightBottom"" style=""font-family:helvetica; font-size:8pt; padding:2px;"" align=""left"" uniqueID=""ms__id27"">						<xsl:choose>							<xsl:when test=""../../cn_bom_note != '0'"">								<xsl:value-of select=""../../cn_bom_note""/>								<xsl:if test=""../../cn_bom_note='' or not(../../cn_bom_note)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:when test=""../../cn_bom_note != '0'"">								<xsl:value-of select=""../../cn_bom_note""/>								<xsl:if test=""../../cn_bom_note='' or not(../../cn_bom_note)"">									<xsl:text> </xsl:text>								</xsl:if>							</xsl:when>							<xsl:otherwise>								<xsl:text> </xsl:text>							</xsl:otherwise>						</xsl:choose>					</td>				</tr>			</xsl:template>		</xsl:stylesheet>. .                                                    ",152
https://ithelp.ithome.com.tw/articles/10255277,身份驗證器或身份驗證機制（authenticator or authentication mechanism）,,2021-01-27 11:04:07,,                                                            .客戶端的屬性或屬性值無法向IdP認證客戶端。例如，提交用戶名和員工ID的用戶將不會向IdP進行身份驗證。..	以明文形式傳輸的密碼很容易受到攻擊，但是它可以對客戶端進行身份驗證，例如，PAP是一個典型示例。..	由密碼的哈希值加密的時間戳要求客戶端和IdP都共享密鑰以解密和驗證身份。..	由主體的私鑰加密的來自IdP的隨機數利用了質詢/響應和非對稱加密的功能。來自IdP的隨機數是一個挑戰。如果客戶端通過其私鑰作為響應來加密隨機數，則只有成對的公鑰才能對其進行解密。.認證方式..身份驗證(authentication).是“驗證用戶，進程或設備的身份的過程，通常將其作為允許訪問信息系統中資源的先決條件”。（FIPS 200）..	憑據將主體的身份綁定到包含機密的身份驗證器。通過證明其擁有和控制驗證器、出示憑據，甚至直接提交機密來驗證主體。。..	.身份（identity）.是“一組屬性值（即特徵），通過它可以識別實體，並且在身份管理者的職責範圍內，足以將該實體與任何其他實體區分開。” （NIST SP 800-161）..參考..	.身份管理..	.建立身份..資料來源： .Wentz Wu QOTD-20210112. .                                                    ,76
https://ithelp.ithome.com.tw/articles/10253956,OpenCart + Journal 版型 = 地球表面最強的電商版型,,2021-01-27 10:23:21,,                                                            .如果您的電商網站，需要有個很多樣化的首頁，來應付不同檔期的活動需求，不只是換換 Banner 而已，而是每次的排版都有很大的變動，有時有影片撥放、有時需要特定分類商品、有時需要拚圖圖片，甚至針對不同身分(會員或非會員)顯示不同的內容，那麼採用 OpenCart + Journal 版型，可能是最能滿足您需求的組合。...OpenCart 內建的系統功能，或許沒有開店平台那麼完整，但如果要比較網站版型的編排功能，那麼 OpenCart 的第三方版型 Journal Theme，絕對可以打趴所有開店平台的版面編輯功能，毫無懸念。從 themeforest 的 OpenCart 版型銷售量來看，銷售量第一名的 Journal Theme，比第 2 ~ 12 名的合計銷售量還多，顯見選擇 Journal Theme 作為 OpenCart 的版型，似乎已是眾多 OpenCart 使用者的共識。..如果您才正準備架設 OpenCart 網站，或是已經安裝了 OpenCart，但對於目前的版型不是很滿意，都建議評估一下 Journal Theme，它除了帶來豐富、細膩的後台管理，前台表現也極為順暢、協調，底下簡單列舉一些感受明顯比較優的特色，讓大家參考 :....11 組高品質、功能實用、樣貌多樣的前台設計套版 - Journal Theme 的版型設計高端大器不酷炫花俏，非常適合品牌電商的經營者，11套版型中也包含深底色的設計，適合不同商品性質的商家。....全面性的風格編輯功能 - 幾乎所有前端版型的物件，Journal Theme 都提供了編輯顏色、字體大小的功能，涵蓋的可編輯範圍極廣，每個區塊都含有極大的調整彈性，前面提到的11套前台設計套版，都是透過後台的編輯功能製作出來的。....內建 Mega Menu - 您不需要再額外購買 Mega Menu 模組，內建非常多樣及彈性的 Mega Menu 編輯功能，讓選單可以更豐富。....支援 Google Rich Snippets - 內建支援 Google Rich Snippets、Facebook Open Graph、Twitter Cards，讓 SEO 效果更好。....手機版的瀏覽效果優異 - Journal Theme 對於手機的調教相當到位，版型編輯也提供很多可針對手機版設定的項目，讓使用者也能自行微調手機版上的呈現效果。....內建一頁式結帳功能 - 一頁式結帳功能可以簡化結帳的步驟，降低客戶中途放棄結帳的機率，相較於單獨安裝的一頁式結帳模組常出現頁面跑版問題，Journal Theme 內建的一頁式結帳，有極佳的整合性。....提供結帳欄位隱藏及指定順序 - Journal Theme 允許你隱藏用不到的結帳欄位，例如 [公司名稱]，也能讓您指定欄位的順序，例如 縣市 > 鄉鎮市區 > 地址。....內建相片集模組 - 若品牌電商有很多商品美照，Journal Theme 內建的相片集模組，可以讓您一次呈現數十張的照片，讓您用大量的美照來創造商品形象，提高轉單率。....內建部落格模組 - 品牌電商常需要發佈最新活動訊息，Journal Theme 內建的部落格模組不只可以提供文章發佈功能，並可透過後台排版功能，自行決定前台出現最新文章的位置及格式，而且每篇文章內，都可以自訂要出現的商品連結，很適合製作 EDM 或活動頁面。....內建常見問答(Q＆A)模組 - 無須再另外購買安裝 Q&A 模組，Journal Theme 已內建 Q&A 模組並提供範例資料，直接編輯即可使用，模組編排的整合性很好，不會造成風格上的不一致。....立即購買及詢價按鈕 - 無須再另外購買安裝，Journal Theme 已內建立即購買及詢價按鈕功能，可隨時設定關閉或啟用，顯示位置、顏色、圖示，也都是可以調整的。....Slider 可放圖片或影片 - Journal Theme 提供的 Slider 功能，除了可播放 Slider 圖片外，還能撥放影片，圖面上也能加文字或按鈕，讓點擊後跳轉到指定的商品或頁面。....自訂商品標帶(Label)功能 - Journal Theme 提供的商品標帶功能，可以自行編輯標帶記的顏色、字體大小、圖示，並可設定多種的商品來源規則，創造出自定義的標帶。....自訂商品簡介分頁功能 - 如果您需要額外的商品介紹資料，例如尺寸表、試穿報告、影片介紹，都可以透過 Journal Theme 提供的自訂商品分頁功能來做到。....商品特價倒數計時功能 - Journal Theme 提供商品特價倒數計時功能，讓特價中的商品，更容易吸引客戶的注意及提高購買慾望，也容易讓網站有大型品牌網站的特色風格。....全面性的自定義文字 - 雖然前端版型的許多文字標題，預設是英文文字，但在 Journal Theme 的後台編輯，幾乎都找得到自行編輯文字標題的地方，商家無須修改程式或檔案，即可自行定義標題的文字。....具排版設計的會員專區頁面 - OpenCart 內建的會員專區主頁，只有簡單的顯示功能清單，毫無編排美感，無法提供優雅的視覺感受，對品牌形象有減分之虞，而 Journal Theme 提供了美編過的會員專區主頁，雖然稱不上高設計品質，但對比內建的單薄設計，已提升不少設計感。....彈性的廣告圖片組合編排 - 許多版型雖然提供了廣告圖片的編輯功能，但許多版型所提供的廣告圖片排版方式是固定的樣式，只能換圖片，無法改樣式，而 Journal Theme 提供了 Banners Grid 的編輯功能，讓您可以更有彈性的編排 Banner 的排列方式，讓首頁時常有明顯的排版變化，提供新鮮感。....優化過的商品篩選模組 - 提供可自訂商品篩選的項目，包括分類、品牌、價格、篩選設定、商品屬性等等，讓商家可自行調整出適合自家網站需求的商品篩選功能，猶如專案設計過的一般。....可指定彈出式訊息視窗會出現的 Layout - 彈出式訊息視窗可以讓訪客聚焦，適合用來提示重點訊息，例如活動規則或期限，而 Journal Theme 不只提供彈出式訊息視窗而已，還能讓你指定要出現的 Layout，例如你只希望彈出式訊息視窗指出現在首頁，其他頁面不要出現，或是每一頁都要出現也可以，而訪客都可以點擊不要再顯示。....提供頁頂的訊息通知模組 - 如果您有訊息要通知訪客，但並不是十分重大，不希望像彈出式訊息視窗影響訪客瀏覽，就很適合使用頁頂的訊息通知模組，而此訊息通知模組一樣可以指定要出現的 Layout，例如設定只出現在商品頁。....Journal 的優點當然不只這 21 項，還有很多細部的設定彈性，都能讓您組合調配出極具特色的首頁，讓網站質感提升，並增加更多的網站自訂功能，無需學習太多的程式或網頁設計技巧，靠自己就能創造屬於自己風格的品牌網站。..參考資源.Journal Theme 官網 .https://www.journal-theme.com/.OpenCart 網站代管、客製、維護 .https://www.osec.tw/.OpenCart 台灣電商社群 .https://www.facebook.com/groups/opencart.taiwan/.OpenCart 台灣優化版專頁 .https://www.osec.tw/opencart.html. .                                                    ,64
